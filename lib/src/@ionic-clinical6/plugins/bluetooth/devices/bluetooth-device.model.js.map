{"version":3,"sources":["../src/@ionic-clinical6/plugins/bluetooth/devices/bluetooth-device.model.ts"],"names":[],"mappings":"AAAA,OAAO,EAA4B,iBAAiB,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACpG,OAAO,EAAE,uBAAuB,EAAE,MAAM,mCAAmC,CAAC;AAG5E,MAAM;IAYJ,YAAY,QAAa,EAAS,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QAC/C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAE,CAAC,IAAI,IAAI,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,CAAC;QACH,CAAC;IACH,CAAC;IAXD,IAAI,YAAY;QACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC;IACrF,CAAC;CAUF","file":"bluetooth-device.model.js","sourcesContent":["import { bluetoothCharacteristics, bluetoothServices, getKeyFromValue } from '../bluetooth.utility';\nimport { BluetoothCharacteristic } from '../bluetooth-characteristic.model';\nimport { BLEService } from '../ble.service';\n\nexport class BluetoothDevice {\n  id: string;\n  advertising: any;\n  rssi: number;\n  name?: string;\n  services?: Array<string>;\n  characteristics?: Array<BluetoothCharacteristic>;\n\n  get serviceNames() {\n    return this.services.map(s => getKeyFromValue(parseInt(s, 16), bluetoothServices));\n  }\n\n  constructor(response: any, public ble: BLEService) {\n    if (response) {\n      Object.assign(this, response);\n      if (this.characteristics && this.characteristics.length > 0) {\n        this.characteristics = this.characteristics.map( c => new BluetoothCharacteristic(c));\n      }\n    }\n  }\n}\n"]}