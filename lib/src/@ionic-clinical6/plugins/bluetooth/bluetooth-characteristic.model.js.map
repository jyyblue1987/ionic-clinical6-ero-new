{"version":3,"sources":["../src/@ionic-clinical6/plugins/bluetooth/bluetooth-characteristic.model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,iBAAiB,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEnG,MAAM;IAMJ,IAAI,kBAAkB;QACpB,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,wBAAwB,CAAC,CAAC;IACtF,CAAC;IAED,IAAI,WAAW;QACb,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC;IACxE,CAAC;IAED,YAAY,QAAc;QACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;CACF","file":"bluetooth-characteristic.model.js","sourcesContent":["import { bluetoothCharacteristics, bluetoothServices, getKeyFromValue } from './bluetooth.utility';\n\nexport class BluetoothCharacteristic {\n  service: string;\n  characteristic: string;\n  properties: Array<string>;\n  descriptors?: Array<any>;\n\n  get characteristicName() {\n    return getKeyFromValue(parseInt(this.characteristic, 16), bluetoothCharacteristics);\n  }\n\n  get serviceName() {\n    return getKeyFromValue(parseInt(this.service, 16), bluetoothServices);\n  }\n\n  constructor(response?: any) {\n    if (response) {\n      Object.assign(this, response);\n    }\n  }\n}\n\n"]}