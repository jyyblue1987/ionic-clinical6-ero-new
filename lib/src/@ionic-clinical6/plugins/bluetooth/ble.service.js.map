{"version":3,"sources":["../src/@ionic-clinical6/plugins/bluetooth/ble.service.ts"],"names":[],"mappings":"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","file":"ble.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BLE } from '@ionic-native/ble';\nimport { BluetoothDevice } from './devices/bluetooth-device.model';\nimport { BluetoothFactory } from './bluetooth.factory';\nimport { bluetoothServices, bluetoothCharacteristics } from './bluetooth.utility';\n\n@Injectable()\nexport class BLEService extends BLE {\n  constructor(private ble: BLE) {\n    super();\n  }\n\n  scan(services: string[], seconds: number): Observable<BluetoothDevice> {\n    return Observable.create((observer) => {\n      for (var i = 0; i < services.length; ++i ) {\n        const service = services[i];\n        if (bluetoothServices[service]) {\n          services[i] = bluetoothServices[service].toString(16);\n        }\n      }\n      this.ble.scan(services, seconds).subscribe(device => {\n        observer.next(BluetoothFactory.create(device, this));\n      });\n    });\n  }\n\n  startScan(services: string[]): Observable<BluetoothDevice> {\n    return Observable.create((observer) => {\n      this.ble.startScan(services).subscribe(device => {\n        observer.next(BluetoothFactory.create(device, this));\n      });\n    });\n  }\n\n  startScanWithOptions(services: string[], options: {\n        reportDuplicates?: boolean;\n    } | any): Observable<BluetoothDevice> {\n    return Observable.create((observer) => {\n      this.ble.startScanWithOptions(services, options).subscribe(device => {\n        observer.next(BluetoothFactory.create(device, this));\n      });\n    });\n  }\n\n  connect(deviceId: string): Observable<BluetoothDevice> {\n    return Observable.create((observer) => {\n      this.ble.connect(deviceId).subscribe(device => {\n        observer.next(BluetoothFactory.create(device, this));\n      });\n    });\n  }\n\n  read(deviceId: string, service: string, characteristic: string): Promise<any> {\n    let _service: string = service;\n    let _characteristic: string = characteristic;\n\n    if (bluetoothServices[service]) {\n      _service = bluetoothServices[service].toString(16);\n    }\n    if (bluetoothCharacteristics[characteristic]) {\n      _characteristic = bluetoothCharacteristics[characteristic].toString(16);\n    }\n    return this.ble.read( deviceId, _service, _characteristic);\n  }\n\n  write(deviceId: string, service: string, characteristic: string, value: ArrayBuffer): Promise<any> {\n    let _service: string = service;\n    let _characteristic: string = characteristic;\n\n    if (bluetoothServices[service]) {\n      _service = bluetoothServices[service].toString(16);\n    }\n    if (bluetoothCharacteristics[characteristic]) {\n      _characteristic = bluetoothCharacteristics[characteristic].toString(16);\n    }\n    return this.ble.write( deviceId, _service, _characteristic, value);\n  }\n\n  writeWithoutResponse(deviceId: string, service: string, characteristic: string, value: ArrayBuffer): Promise<any> {\n    let _service: string = service;\n    let _characteristic: string = characteristic;\n\n    if (bluetoothServices[service]) {\n      _service = bluetoothServices[service].toString(16);\n    }\n    if (bluetoothCharacteristics[characteristic]) {\n      _characteristic = bluetoothCharacteristics[characteristic].toString(16);\n    }\n    return this.ble.writeWithoutResponse( deviceId, _service, _characteristic, value);\n  }\n\n  startNotification(deviceId: string, service: string, characteristic: string): Observable<any> {\n    let _service: string = service;\n    let _characteristic: string = characteristic;\n\n    if (bluetoothServices[service]) {\n      _service = bluetoothServices[service].toString(16);\n    }\n    if (bluetoothCharacteristics[characteristic]) {\n      _characteristic = bluetoothCharacteristics[characteristic].toString(16);\n    }\n    return this.ble.startNotification( deviceId, _service, _characteristic);\n  }\n\n  stopNotification(deviceId: string, service: string, characteristic: string): Promise<any> {\n    let _service: string = service;\n    let _characteristic: string = characteristic;\n\n    if (bluetoothServices[service]) {\n      _service = bluetoothServices[service].toString(16);\n    }\n    if (bluetoothCharacteristics[characteristic]) {\n      _characteristic = bluetoothCharacteristics[characteristic].toString(16);\n    }\n    return this.ble.stopNotification( deviceId, _service, _characteristic);\n  }\n}\n"]}