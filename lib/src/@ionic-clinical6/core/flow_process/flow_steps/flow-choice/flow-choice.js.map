{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_steps/flow-choice/flow-choice.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAS,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AACjF,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAyBtD,IAAa,cAAc,GAA3B,oBAA4B,SAAQ,YAAY;IAG9C,YAAmB,QAAsB,EACtB,SAAoB,EACpB,GAAkB,EAClB,QAAqB,EACrB,SAA0B;QAC3C,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QALpC,aAAQ,GAAR,QAAQ,CAAc;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,QAAG,GAAH,GAAG,CAAe;QAClB,aAAQ,GAAR,QAAQ,CAAa;QACrB,cAAS,GAAT,SAAS,CAAiB;QAE3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,CAAC,2DAA2D;QAC5H,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC7B,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,8BAA8B;QAChC,CAAC;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,WAAgB;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACvB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;CAEF,CAAA;AAxBY,cAAc;IAvB1B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;GAmBT;KACF,CAAC;qCAI6B,YAAY;QACX,SAAS;QACf,aAAa;QACR,WAAW;QACV,eAAe;GAPlC,cAAc,CAwB1B;SAxBY,cAAc","file":"flow-choice.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Modal, NavController, NavParams, ModalController } from 'ionic-angular';\nimport { FlowStepPage } from '../flowstep';\nimport { FlowService } from '../../flow.service';\nimport { AppConfig } from '../../../config/app.config';\nimport { UtilsService } from '../../../utils.service';\n\n@Component({\n  selector: 'flow-choice',\n  templateUrl: 'flow-choice.html',\n})\nexport class FlowChoicePage extends FlowStepPage {\n  themeColor: string;\n\n  constructor(public utilsSvc: UtilsService,\n              public navParams: NavParams,\n              public nav: NavController,\n              public flowCtlr: FlowService,\n              public modalCtrl: ModalController) {\n    super(utilsSvc, navParams, nav, flowCtlr, modalCtrl);\n    this.themeColor = this.navParams.get('themeColor') || '#4F2683'; // primary color TODO, do we have a global variable for it?\n    this.setupOrManage = 'setup';\n    if (AppConfig.demoMode) {\n      // add here code for demo mode\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  gotoFlow(button_name: any) {\n    this.step.flow.reset();\n    return super.gotoFlow(button_name);\n  }\n\n}\n"]}