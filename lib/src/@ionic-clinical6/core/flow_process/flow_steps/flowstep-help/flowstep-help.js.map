{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_steps/flowstep-help/flowstep-help.ts"],"names":[],"mappings":"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","file":"flowstep-help.js","sourcesContent":["/* globals Clinical6 */\nimport { Component, ViewChild } from '@angular/core';\nimport { Modal, NavController, ModalController, NavParams } from 'ionic-angular';\nimport { AlertModalPage } from '../../../modal/alert-modal';\nimport { HelpModalPage } from '../../../modal/help-modal';\nimport { FlowStepPage } from '../flowstep';\nimport { FlowService } from '../../flow.service';\nimport { clinical6 } from 'clinical6';\nimport { AppConfig } from '../../../config/app.config';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UtilsService } from '../../../utils.service';\n\n@Component({\n  selector: 'flowstep-help',\n  templateUrl: 'flowstep-help.html',\n})\n\nexport class FlowStepHelpPage extends FlowStepPage {\n  baseUrl: string = clinical6.apiBaseUrl;\n  showHelpButton: boolean;\n  additionalButtons: Array<number>;\n  prevNextButtons: Array<number>;\n  showInputs: boolean;\n  helpPage: any;\n\n  // item = { type: 'none', endPoint: ''};\n\n  constructor(\n    public utilsSvc: UtilsService,\n    public navParams: NavParams,\n    public nav: NavController,\n    public flowCtlr: FlowService,\n    public modalCtrl: ModalController,\n    public sanitizer?: DomSanitizer\n    ) {\n    super(utilsSvc, navParams, nav, flowCtlr, modalCtrl);\n    this.showHelpButton = this.step.help_subtitle || this.step.help_text;\n\n    this.showInputs = false;\n    if (this.inputs.length > 0) {\n      this.showInputs = true;\n    }\n\n    this.prevNextButtons = new Array();\n    this.additionalButtons = new Array();\n\n    // Go through step.paths and store the index values for previous / next buttons & additional buttons in their respective arrays\n    for (var i = 0; i < this.step.paths.length; i++) {\n      if (this.step.paths[i].button_name.toLowerCase() === 'next' || this.step.paths[i].button_name.toLowerCase() === 'prev'\n        || this.step.paths[i].button_name.toLowerCase() === 'previous'\n        || this.step.paths[i].button_name.toLowerCase() === 'continue' || this.step.paths[i].button_name.toLowerCase() === 'complete') {\n        this.prevNextButtons.push(i);\n      } else {\n        this.additionalButtons.push(i);\n      }\n    }\n\n    console.log('Additional Buttons len: ' + this.additionalButtons.length);\n\n  }\n\n  ionViewDidLoad() {\n  }\n\n  showHelp() {\n    let modal = this.modalCtrl.create(HelpModalPage, {\n      title: this.step.help_title || 'Information',\n      subTitle: this.step.help_subtitle,\n      helpText: this.step.help_text || `No help text exists for this element.`,\n      color: 'help'\n    }, { showBackdrop: true });\n\n    modal.onDidDismiss(action => {\n      if (action === 'contact') {\n        this.goToContactPage();\n      }\n    });\n\n    modal.present();\n  }\n\n  goToContactPage() {\n    this.nav.push(this.helpPage, { from: '' }, AppConfig.animationOpt);\n  }\n}\n\n\nconst DEMOUSERINFO: any = {\n  'title': 'Dr. (example)',\n  'first_name': 'Pat (example)',\n  'last_name': 'Cooper (example)',\n  'phone': '619-323-3456 (example)',\n  'email': 'pcooper@lojollaclinic.com (example)',\n  'role': 'Physician (example)'\n};"]}