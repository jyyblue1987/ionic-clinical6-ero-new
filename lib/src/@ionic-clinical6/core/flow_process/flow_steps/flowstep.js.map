{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_steps/flowstep.ts"],"names":[],"mappings":"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","file":"flowstep.js","sourcesContent":["import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport moment from 'moment';\n\nimport { NavController, NavParams, Loading, ModalController, Platform, AlertController } from 'ionic-angular';\nimport { analyticsService, discussService, Thread, Client } from 'clinical6';\n\nimport { AppConfig } from '../../config/app.config';\nimport { AppFlowInput } from '../flow_inputs/flow-input.model';\nimport { InputContainerComponent } from '../flow_inputs/input-container.component';\nimport { FlowService } from '../flow.service';\nimport { Flows } from '../flow-factory';\nimport { AlertModalPage } from '../../modal/alert-modal';\nimport { PdfViewPage } from '../../pages/pdf-view/pdf-view';\n\nimport { BasePage } from '../../pages/base/base-page';\nimport { UtilsService } from '../../utils.service';\n\n@Component({\n  selector: 'flowstep',\n  templateUrl: 'flowstep.html'\n})\nexport class FlowStepPage extends BasePage {\n\n  nextButtonNames: Array<string>;\n  prevButtonNames: Array<string>;\n  prevButtonName: string;\n  nextButtonName: string;\n\n  navbarTitle: string;\n  backButtonText: string;\n  themeColor: string;\n  isAnswerValid: boolean = false;\n  footerPrevNext: boolean = false;\n  showImage: boolean = false;\n  isNavigating: boolean = false;\n\n  flow: any;\n  step: any;\n  nextStep: any;\n  inputs: AppFlowInput[];\n  fields: any = {};\n  inputvalues: any = {};\n  existingId: any = null;\n  setupOrManage: string;\n  editing: boolean = true;\n  noDelete: boolean;\n  comment = { present: false, body: null, custom: false };\n\n  loadingCtrl: Loading;\n  formValid: boolean;\n  previousResponse: any;\n  filter: any;\n\n  constructor(\n    public utilsSvc: UtilsService,\n    public navParams: NavParams,\n    public nav: NavController,\n    public flowCtlr: FlowService,\n    public modalCtrl: ModalController,\n    public sanitizer?: DomSanitizer,\n    public platform?: Platform,\n    public elementRef?: ElementRef,\n    public alertCtrl?: AlertController\n  ) {\n    super(platform, elementRef);\n\n    this.step = this.navParams.get('step');\n\n    this.setupOrManage = this.isThisAManageStep() ? 'manage' : (this.navParams.get('setupOrManage') || 'setup');\n    this.editing = (this.navParams.get('editing') !== undefined) ? this.navParams.get('editing') : ((this.setupOrManage === 'manage') ? false : true);\n    this.navbarTitle = this.navParams.get('navbarTitle') || '';\n    this.themeColor = this.navParams.get('themeColor') || '';\n    this.backButtonText = this.navParams.get('backButtonText') || '';\n    this.noDelete = this.navParams.get('noDelete') || undefined;\n    this.previousResponse = this.navParams.get('previousResponse') || {};\n    this.showImage = false;\n\n\n    this.inputs = this.step.inputs;\n    this.isAnswerValid = true;\n\n    // Fill up the form with stored values\n    for (let inputdata of this.step.inputs) {\n      this.fields[inputdata.id] = this.step.get(inputdata.id) || '';\n      this.inputvalues[inputdata.id] = this.step.get(inputdata.id);\n      if (inputdata.question_type === 'pre_populated') {\n        this.inputvalues[inputdata.id] = inputdata.style;\n      }\n      this.isAnswerValid = false;\n    }\n\n    for (let inputState of this.inputs) {\n      inputState.inputId = inputState.id;\n      inputState.inputTitle = inputState.title;\n      inputState.inputStyle = inputState.style;\n      inputState.inputChoices = inputState.choice_list;\n      inputState.inputType = inputState.question_type;\n      inputState.inputEnabled = !inputState.locked;\n      inputState.inputRequired = inputState.required;\n      for (let choiceState of inputState.inputChoices) {\n        choiceState.choiceId = choiceState.id;\n        choiceState.choiceBody = choiceState.body;\n        choiceState.choiceSelected = false;\n      }\n    }\n\n    if (this.step.progress_bar) {\n        this.step.index = this.step.flow.steps.findIndex((step) => {\n          return step.id === this.step.id;\n        });\n    }\n\n    this.setButtonNames();\n\n    this.footerPrevNext = this.isThisAPrevNextFooterPage();\n    this.nextStep = this.selectNextStep();\n\n    this.filter = { exclusionsList: this.navParams.get('exclusionsList') } || null;\n  }\n\n\n  /**\n   * This method can be overridden to add additional/different button names\n   * that help identifying the Prev-Next layout\n   */\n  setButtonNames() {\n    this.nextButtonNames = ['next', 'continue'];\n    this.prevButtonNames = ['prev'];\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the step to go to when clicking on \"Next\" button\n   * Tipically a flow page can have many buttons and possible\n   * corresponding next steps. In case of a Prev / Next footer page there\n   * is no strict way to determine which one is the 'Prev' step and which the 'Next'.\n   * This method can be overridden and it's used to determine the 'Next' step.\n   * (The Prev step would presumably be a 'Back' button)\n   */\n  selectNextStep() {\n    // if there is only one path, go for it\n    if (this.step.paths.length === 1) {\n      return this.step.paths[0];\n    }\n\n    // find one path whose button_name is in the this.nextButtonNames Array\n    let nextStepIndex = this.step.paths.findIndex(path => { return this.nextButtonNames.map(value => { return path.button_name.toLowerCase() === value.toLowerCase(); }).reduce((prev, curr) => { return prev || curr; }); });\n    if (nextStepIndex >= 0) return this.step.paths[nextStepIndex];\n\n    return null;\n  }\n\n  isThisAPrevNextFooterPage() {\n    let result = false;\n\n    if (this.step.paths.length > 0) {\n      // let nextStepIndex = this.step.paths.findIndex(path => ((path.button_name.toLowerCase() === 'next') || (path.button_name.toLowerCase() === 'continue' )));\n\n      let nextStepIndex = this.step.paths.findIndex(path => { return this.nextButtonNames.map(value => { return path.button_name.toLowerCase() === value.toLowerCase(); }).reduce((prev, curr) => { return prev || curr; }); });\n\n      let prevStepIndex = this.step.paths.findIndex(path => { return this.prevButtonNames.map(value => { return path.button_name.toLowerCase() === value.toLowerCase(); }).reduce((prev, curr) => { return prev || curr; }); });\n\n\n      // Sets Button names\n      this.prevButtonName = prevStepIndex >= 0 ? this.step.paths[prevStepIndex].button_name : '';\n      this.nextButtonName = nextStepIndex >= 0 ? this.step.paths[nextStepIndex].button_name : '';\n\n\n      // 1. Is there a button with a label in this.nextButtonNames ?\n      if (nextStepIndex >= 0) result = true;\n\n      // 2. Is there a button with a label in this.prevButtonNames ?\n      else if (prevStepIndex >= 0) result = true;\n\n      // 3. Is this a manage step ? (Legacy)\n      if (this.setupOrManage === 'manage') result = true; // this is to keep proper handling of additional buttons\n    }\n\n    return result;\n  }\n\n  ionViewDidLoad() {\n    this.checkComments();\n  }\n\n  async checkComments() {\n    // check if there are comments for this step\n    // this only applies for flow starting from the Manage Site Profile\n    if (this.setupOrManage === 'manage' && !this.comment.custom) {\n      // TODO, here we are checking every time, maybe we can condition the check if there is a pending alert\n      const self = this;\n\n      let commentable = this.step.commentable || this.step.flow.commentable;\n      if (commentable) {\n        let thread = new Thread();\n        thread.owner = Client.instance.user;\n        thread.commentable = { id: commentable.commentable_id, type: commentable.commentable_type };\n        const comments = await discussService.getComments(thread);\n            if (comments.length > 0) {\n              self.comment.present = true;\n              self.comment.body = comments[comments.length - 1].body;\n            }\n      }\n    }\n  }\n\n  handleComment() {\n    this.comment.present = false;\n  }\n  async ionViewWillEnter() {\n    this.isNavigating = false;\n    // Clinical6.postInsights('Step: this.step.title (id: ${this.step.id})', 'Entered: ' + this.step.title, true);\n    if (this.step.id === this.step.flow.first.id) {\n      await analyticsService.postInsights('Flow: Started',\n        'Flow: ' + this.step.flow.name + ' (id: ' + this.step.flow.id + ')',\n        true,\n        this.step.flow.id,\n        this.step.flow.name,\n        (new Date()).toISOString());\n\n      this.step.flow.transition('start');\n      this.flowCtlr.resetStack(this.step);\n    }\n    await analyticsService.postInsights('Flow Step: Entered',\n      'Flow: ' + this.step.flow.name + ' (id: ' + this.step.flow.id + ')',\n      true,\n      this.step.id,\n      this.step.title,\n      (new Date()).toISOString());\n  }\n\n  goToPage(event: any) {\n    switch (event.id) {\n      case 'viewFile':\n        // this is a dead ended flow\n        this.nav.push(PdfViewPage, { title: '', filePath: event.value, themeColor: this.themeColor }, AppConfig.animationOpt);\n        this.isNavigating = false;\n        break;\n      case 'removeFile':\n        if (event.value) {\n          let input = this.step.inputs.find(el => { return (el.storage_attribute === 'remove_' + event.value); });\n          if (input) {\n            this.step.set(input.id, 'true');\n          }\n          else console.error('FlowStep delete file: input ' + 'remove_' + event.value + ' not found in flow: ' + this.step.flow.id);\n\n        }\n        break;\n      case 'uploadFile':\n        var pathName = event.value;\n        if (this.step.getPath(pathName) && this.step.getPath(pathName).steps &&\n          this.step.getNextStep(this.step.getPath(pathName).steps)) {\n\n          let followingStep = this.step.getNextStep(this.step.getPath(pathName).steps);\n          this.gotoFlow(pathName, { navbarTitle: followingStep.title, themeColor: this.themeColor, setupOrManage: 'setup' });\n        }\n        this.isNavigating = false;\n        break;\n    }\n  }\n\n  updateControlValue(event: any) {\n    this.inputvalues[event.id] = event.value;\n    this.step.set(event.id, event.value);\n  }\n\n  updateFormStatus(valid: any) {\n    this.formValid = valid;\n  }\n\n  doneCallback() {\n  }\n  hasUploadButton() {\n    return (this.step.paths.findIndex((el) => { return el.button_name === 'Attach Document via Email'; }) >= 0);\n  }\n  isThisAManageStep() {\n\n    // When the Attach Document via Email sub_flows are used,\n    // the info on setup/manage mode is lost since the flow has to be a 'setup' flow (showing next/prev buttons)\n    // so here we infer whether this is going to be a 'manage' step looking at the button names.\n    //\n    // TODO: this is very baroque coding... need to figure out a way to set the step layout style in the flow\n    // configuration on the backend\n    if (!this.step) return false;\n\n    return this.step.paths.reduce((prev, curr) => {\n      return (prev ||\n        ['medical_board',\n          'certificate',\n          'license',\n          'normal_values',\n          'cv',\n          'New Document',\n          'Done',\n          'document']\n          .indexOf(curr.button_name) >= 0) ||\n        (curr.button_name && (curr.button_name.indexOf('tag_') > -1));\n    }, false);\n  }\n  displayAsSpecialButton(path: any) {\n    // Filter out some redundant or unneeded buttons/paths\n    // that will break the page layout\n    // in particular all buttons that are not to be displayed as\n    // special buttons (ie. light blue wide buttons above the footer)\n    // those include:\n    //  - buttons to be placed in the footer (eg. )Next/Prev, etc..)\n    //  - Buttons to be placed in the toolbar (eg. Plus, Done, ...)\n    //  - buttons managed by some other component (eg. buttons related to file upload fields: medical_board, certificate, ...)\n    //  - leftover/errored buttons (eg. with empty/null button_names )\n\n    return !(([null,\n      '',\n      'medical_board',\n      'certificate',\n      'license',\n      'normal_values',\n      'cv',\n      'document',\n      'new document',\n      'cancel',\n      'plus',\n      'prev',\n      'next',\n      'continue',\n      'complete',\n      'done']\n      .indexOf(path.button_name.toLowerCase()) >= 0) ||\n      (path.button_name && (path.button_name.indexOf('tag_') > -1)));\n  }\n  enterEditMode() {\n    this.editing = true;\n  }\n  doneEditing() {\n    if (this.setupOrManage === 'manage') {\n      if ((this.step.flow.id)) {\n        // here there is a proper Flow handling data input/update\n        for (let inputdata of this.step.inputs) {\n          if (!AppConfig.demoMode) { // SKIP in case of Demo Mode\n            if (this.inputvalues[inputdata.id] !== null) this.step.set(inputdata.id, this.inputvalues[inputdata.id]);\n          }\n        }\n        this.step.save();\n        this.doneEditingCallback();\n      }\n      else {\n        this.step.save();\n        this.nav.pop(AppConfig.animationOptBack);\n      }\n    }\n    else {\n      this.nav.pop(AppConfig.animationOptBack);\n    }\n    this.editing = false;\n\n  }\n  doneEditingCallback() {\n    // let nextPathName = this.step.getPath('Next').steps ? 'Next' : 'Complete';\n    let nextPathName = this.selectNextStep() ? this.selectNextStep().button_name : null;\n    let currentDepth = this.navParams.get('editingDepth') || 0; currentDepth++;\n\n    if (!this.isThisASingleStep() && nextPathName) {\n      // ... then keep following the flow\n      this.gotoFlow(nextPathName, { setupOrManage: 'manage', noDelete: true, editing: true, editingDepth: currentDepth });\n    }\n    else {\n      // ...otherwise just go back\n      this.nav.remove(this.nav.length() - currentDepth, currentDepth);\n    }\n  }\n  isThisASingleStep() {\n    // A step is considered to be a single step\n    // if the next step in the flow has a different title\n    // let nextPathName = this.step.getPath('Next').steps ? 'Next' : 'Complete';\n\n    let nextPath = this.selectNextStep();\n    // if (this.step.getPath(nextPathName) &&\n    //     this.step.getPath(nextPathName).steps &&\n    //     this.step.getNextStep(this.step.getPath(nextPathName).steps) &&\n    //     (this.step.getNextStep(this.step.getPath(nextPathName).steps).title === this.step.title )) {\n    if (nextPath &&\n      nextPath.steps &&\n      this.step.getNextStep(nextPath.steps) &&\n      (this.step.getNextStep(nextPath.steps).title === this.step.title)) {\n      return false; // this step is to be considered as part of a pool\n    }\n    else {\n      return true; // this step is to be considered as single\n    }\n  }\n\n  getDoneEditLabel() {\n    if ((this.setupOrManage === 'manage') && this.editing) return (this.isThisASingleStep() ? 'Done' : 'Next');\n    if ((this.setupOrManage === 'manage') && !this.editing) return 'Edit';\n  }\n  actionDoneEdit() {\n    if ((this.setupOrManage === 'manage') && this.editing) return this.doneEditing();\n    if ((this.setupOrManage === 'manage') && !this.editing) return this.enterEditMode();\n  }\n  isActionBtnDisabled() {\n    if ((this.setupOrManage === 'manage') && this.editing) return (!this.formValid);\n    return false;\n  }\n  getRelatedConditionalSteps(nextPathName: string) {\n\n    if (!(this.step.getPath(nextPathName) &&\n      this.step.getPath(nextPathName).steps &&\n      this.step.getNextStep(this.step.getPath(nextPathName).steps))) return null;\n\n    let condSteps = this.step.getPath(nextPathName).steps;\n    let nextStep = this.step.getNextStep(this.step.getPath(nextPathName).steps);\n    return condSteps.map(el => { return el.step; })\n      .filter((el) => el.id !== nextStep.id);\n  }\n\n  gotoFlowLegacy(name: string, options: any = {}) {\n\n    let dataValues: Array<{ input_id: number, att_name: string, value: string }>;\n    let previousResponse: any = this.previousResponse;\n\n    this.step.onSave = (currentResponse) => {\n      previousResponse = currentResponse;\n    };\n\n    // This is used to prevent double tapping / double saving / data corruption.\n    // Do not remove this when something fails, instead figure out where \"isNavigating\"\n    // should be true/false appropriately.\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n      let followingStep;\n\n      // handling inputs\n      for (let inputdata of this.step.inputs) {\n        if (!AppConfig.demoMode) { // SKIP in case of Demo Mode\n          this.step.existingId = this.existingId;\n          this.step.set(inputdata.id, this.inputvalues[inputdata.id]);\n        }\n      }\n\n      // SKIP in case of Demo Mode or Force ignoring required fields\n      if (!AppConfig.demoMode && !options.ignoreRequiredFields) {\n        const self = this;\n        let auxStep = this.step;\n        this.step.go(name).then((followingStep) => {\n          if (followingStep) { // double check NEED REVIEW\n            for (let index = 0; index < followingStep.inputs.length; index++) {\n              let singleInput = followingStep.inputs[index];\n              // if we need values for the next step, we save them\n              if (dataValues) {\n                if (dataValues[index]) {\n                  followingStep.set(singleInput.id, dataValues[index].value);\n                }\n                else {\n                  // if there are no values, we clear previous values\n                  followingStep.set(singleInput.id, undefined);\n                }\n              }\n            }\n            this.flowCtlr.goToStep(followingStep, Object.assign({\n              step: followingStep,\n              navbarTitle: self.navbarTitle,\n              themeColor: self.themeColor,\n              backButtonText: self.backButtonText,\n              previousResponse,\n              setupOrManage: this.setupOrManage\n            }, options));\n            this.isNavigating = false;\n          }\n        },\n          (failure) => {\n            this.isNavigating = false;\n            AlertModalPage.show(\n              self, {\n                type: 'type_error',\n                body: failure.messageHTML || failure.message,\n                subTitle: 'Unable to save',\n                cancelCallback: (ref) => {\n                  console.log('Could not load the dashaboard', failure);\n                }\n              });\n\n          });\n      }\n      else { // move to next step anyway in case of Demo Mode\n        if (this.step.getPath(name).steps.length > 0) {\n          followingStep = this.step.getPath(name).steps[0].step;\n          if (followingStep) {\n            this.flowCtlr.goToStep(followingStep, {\n              step: followingStep,\n              navbarTitle: this.navbarTitle,\n              themeColor: this.themeColor,\n              backButtonText: this.backButtonText,\n              setupOrManage: this.setupOrManage\n            });\n            this.isNavigating = false;\n          }\n        }\n        else {\n          this.step.flow.end(this.step);\n        }\n      }\n    }\n  }\n\n  async gotoFlow(name: string, options: any = {}) {\n\n    // This is used to prevent double tapping / double saving / data corruption.\n    // Do not remove this when something fails, instead figure out where \"isNavigating\"\n    // should be true/false appropriately.\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n\n      let dataValues: Array<{ input_id: number, att_name: string, value: string }>;\n      let previousResponse: any = this.previousResponse;\n\n      this.step.onSave = (currentResponse) => {\n        previousResponse = currentResponse;\n      };\n\n      // handling inputs\n      for (let inputdata of this.step.inputs) {\n        if (!AppConfig.demoMode) { // SKIP in case of Demo Mode\n          this.step.existingId = this.existingId;\n          this.step.set(inputdata.id, this.inputvalues[inputdata.id]);\n          console.log('Flow proces Values');\n          console.log(`InputId: ${inputdata.id}, Value: ${this.inputvalues[inputdata.id]}`);\n        }\n      }\n\n      // console.log('FlowStep Page getting the followingStep for ', this.step);\n      let followingStep;\n      // Handle the special cases:\n      // - Demo Mode, or\n      // - Force ignoring required fields\n      if (AppConfig.demoMode || options.ignoreRequiredFields) {\n        followingStep = this.step.getPath(name).steps[0].step;\n\n        // last step\n        if (!followingStep) {\n          this.step.flow.end(this.step);\n          // this.isNavigating = false;\n          return true;\n        }\n      }\n      else { // normal case\n        try {\n          followingStep = await this.step.go(name);\n        }\n        catch (failure) {\n          console.warn('FlowStep Page this.step.go(name), failure', failure);\n          AlertModalPage.show(this, {\n            type: 'type_error',\n            body: failure.messageHTML || failure.message,\n            subTitle: 'Unable to save',\n            cancelCallback: (ref) => {\n              console.log('Could not load the dashaboard', failure);\n            }\n          });\n          this.isNavigating = false;\n          return false;\n        }\n      }\n\n      if (!followingStep) {\n        // this.isNavigating = false;\n        return true;\n      }\n      // console.log('FlowStep Page followingStep is ', followingStep);\n\n      // double check NEED REVIEW\n      for (let index = 0; index < followingStep.inputs.length; index++) {\n        let singleInput = followingStep.inputs[index];\n        // if we need values for the next step, we save them\n        if (dataValues) {\n          if (dataValues[index]) {\n            followingStep.set(singleInput.id, dataValues[index].value);\n          }\n          else {\n            // if there are no values, we clear previous values\n            followingStep.set(singleInput.id, undefined);\n          }\n        }\n      }\n\n      this.isNavigating = false;\n      return this.flowCtlr.goToStep(followingStep, Object.assign({\n        step: followingStep,\n        navbarTitle: this.navbarTitle,\n        themeColor: this.themeColor,\n        backButtonText: this.backButtonText,\n        previousResponse,\n        setupOrManage: this.setupOrManage\n      }, options));\n    }\n  }\n\n  showPrevButton() {\n    return (this.step.index !== 0);\n  }\n  imgLoaded() {\n    this.showImage = true;\n  }\n  imgError(event: any) {\n    console.log('image error called ', event);\n    this.showImage = false;\n  }\n  trustHTML(text: string) {\n    return this.sanitizer.bypassSecurityTrustHtml(text);\n  }\n  onError(message: any) {\n\n  }\n  showError(subtitle: string, body: any) {\n    AlertModalPage.show(this, {\n      type: 'type_error',\n      body: body,\n      subTitle: subtitle\n    });\n  }\n  deleteItem(id?: string) {\n    const self = this;\n    let prompt = this.alertCtrl.create({\n      title: 'Delete Item',\n      message: 'Are you sure you would like to delete this item?',\n      inputs: [],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: data => {\n            console.log('Deleting, Cancel clicked, returns to the same page');\n          }\n        },\n        {\n          text: 'Delete',\n          handler: data => {\n            console.log('This needs to be handled by application');\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n\n  /**\n   * This is to Handle the 'Go' button on the device Keyboard for iOS\n   * @param event\n   */\n  handleGoButton(event: KeyboardEvent) {\n    if (this.platform && this.platform.is('ios')) {\n      if (event.keyCode === 13) {\n        for (let i = 0; i < this.inputItems.length; i++) {\n          if (this.inputItems[i] === document.activeElement) {\n            console.log('found item, index: ', i);\n            if (i >= this.inputItems.length - 2) {\n              let nextPathName = 'Complete';\n              if (this.step.getPath('Next').steps) nextPathName = 'Next';\n              if (this.step.getPath('NEXT').steps) nextPathName = 'NEXT';\n              if (this.step.getPath('next').steps) nextPathName = 'next';\n\n              this.gotoFlow(nextPathName);\n            } else {\n              let auxItem = this.inputItems[(i + 2) % this.inputItems.length];\n              auxItem.focus();\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  goBack() {\n    this.popStack();\n    this.flowCtlr._navCtrl.pop(AppConfig.animationOptBack);\n  }\n  \n  popStack() {\n    this.flowCtlr._stepsStack.pop();\n    if ( this.flowCtlr._stepsStack.length - 1 > 0 ) {\n      // update the current progress bar index in the FlowService\n      if (this.step['progress_bar'] && this.flowCtlr._progress_current_step > 0)\n        this.flowCtlr._progress_current_step--;\n\n      this.flowCtlr._currentStepID = this.flowCtlr._stepsStack[this.flowCtlr._stepsStack.length - 1].stepId;\n    } else {\n      // update the current progress bar index in the FlowService\n      if (this.step['progress_bar'] && this.flowCtlr._progress_current_step > 0)\n        this.flowCtlr._progress_current_step--;\n      this.flowCtlr._currentStepID = undefined;\n    }\n  }\n\n  getIndexByBFS() { // use the BFS to calculate the Progress Bar percentage to avoid the platform issue about the flowStep id\n    if (this.step.progress_bar) {\n      const sourceBFS = this.step.flow.getBFS(this.step.flow.first);\n      this.step.flow.total = Math.max.apply(Math, Object.keys(sourceBFS).map(key => sourceBFS[key]));      \n      this.step.index = this.step.id === this.step.flow.first.id ? 0 : sourceBFS[this.step.id] -1;      \n    }\n  }\n}"]}