{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_inputs/file-upload/stepinput-file-upload.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAS,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAG9C,OAAO,EAAE,YAAY,EAAmB,MAAM,2BAA2B,CAAC;AAC1E,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAc5D,IAAa,4BAA4B;AADzC,2BAA2B;AAC3B,kCAA0C,SAAQ,kBAAkB;IAWlE,qBAAqB;IAErB;;;;2EAIuE;IAEvE,YAAmB,GAAkB,EAC3B,UAAwB;QAChC,KAAK,EAAE,CAAC;QAFS,QAAG,GAAH,GAAG,CAAe;QAC3B,eAAU,GAAV,UAAU,CAAc;QAlBxB,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAExC,gBAAW,GAA2E,EAAE,CAAC;IAkBzF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,+CAA+C;QAC/C,IAAI,CAAC,WAAW,GAAG,2BAA2B,CAAC;QAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW,CAAC,OAAY;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;QAC3C,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/C,CAAC;IAED,WAAW;QACT,iFAAiF;QACjF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC;QACD,6GAA6G;IAC/G,CAAC;IAED,QAAQ;QACN,4DAA4D;QAC5D,kEAAkE;QAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,UAAU;QACR,wDAAwD;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,kDAAkD;QAElD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,4DAA4D;QAC5D,+CAA+C;QAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;IACvF,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACzE,CAAC;CACF,CAAA;AAvEW;IAAT,MAAM,EAAE;;8DAA+B;AAF7B,4BAA4B;IAXxC,SAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE;;;;;;GAMT;KACF,CAAC;IACF,2BAA2B;;qCAoBD,aAAa;QACf,YAAY;GApBvB,4BAA4B,CAyExC;SAzEY,4BAA4B","file":"stepinput-file-upload.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\nimport { FormGroup } from '@angular/forms';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { StepInputComponent } from '../stepinput.component';\nimport { InputStyle } from '../input.model';\n\n@Component({\n  selector: 'stepinput-file-upload',\n  templateUrl: 'stepinput-file-upload.component.html',\n})\n// TODO: Low priority input\nexport class StepInputFileUploadComponent extends StepInputComponent {\n\n  @Output() goToPage = new EventEmitter();\n\n  choiceItems: Array<{ value: any, text: string, selected: boolean, order?: string }> = [];\n  choice: any;\n\n  filename: string;\n  fileUrl: string;\n  actionLabel: string;\n\n  // objectKey: string;\n\n  /* NOTE on the use of file_upload with forms:\n  do set question_type: 'file_upload', style: 'tag_<string>', title: <filename string to display>\n  and then set the path button_name:  'tag_<string>'  (this will allow flowste.ts to identify the button and hide it)\n  File removal is managed is managed with a style: hidden field having storage_attribute: remove_<file_key>\n  by setting that field to 'true' the file gets removed by the backend */\n\n  constructor(public nav: NavController,\n    private _sanitizer: DomSanitizer) {\n    super();\n  }\n\n  ngOnInit() {\n    this.choiceItems = [];\n    // this.objectKey = Object.keys(this.value)[0];\n    this.actionLabel = 'Attach Document via Email';\n    this.refreshView();\n  }\n\n  ngOnChanges(changes: any) {\n    this.disableForm();\n  }\n\n  disableForm() { // disabled attribute cannot be set dynamically anymore using reactive forms. It needs to use enable()/ disable()\n    if (this.readOnly)\n      this.subForm.controls['input'].disable();\n    else this.subForm.controls['input'].enable();\n  }\n\n  refreshView() {\n    // this.value[this.objectKey] && (this.fileUrl = this.value[this.objectKey].url);\n    if (this.value && this.value !== 'nil') {\n      this.fileUrl = this.value;\n      this.filename = this.body;\n    }\n    // this.fileUrl = this._sanitizer.bypassSecurityTrustResourceUrl(this.value[Object.keys(this.value)[0]].url);\n  }\n\n  openFile() {\n    // sends an event up to the flowstep page since that one has\n    // all info related to theme colors and flow steps to follow paths\n    this.goToPage.emit({ id: 'viewFile', value: this.value });\n  }\n\n  removeFile() {\n    // Set bound variable to 'nil' and propagates the change\n    this.fileUrl = this.filename = null;\n    this.value = 'nil';\n    // this.choiceChanged.emit({ value: this.value });\n\n    if (this.subForm.controls['input'])\n      this.subForm.controls['input'].setValue(this.value);\n    this.refreshView();\n\n    // sends an event up to the flowstep page since that one has\n    // all info tell the backend to remove the file\n    this.goToPage.emit({ id: 'removeFile', value: this.flowInput['storage_attribute'] });\n  }\n  buttonClick() {\n    this.goToPage.emit({ id: 'uploadFile', value: this.style.toString() });\n  }\n}"]}