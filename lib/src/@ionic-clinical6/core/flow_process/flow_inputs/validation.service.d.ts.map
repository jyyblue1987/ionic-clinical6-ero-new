{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/flow_process/flow_inputs/validation.service.d.ts"],"sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\nexport declare class ValidationService {\n    static inputCodeMap: {\n        [inputCode: string]: string;\n    };\n    static maskPhone1: (string | RegExp)[];\n    static maskPhone2: (string | RegExp)[];\n    static maskPhone3: (string | RegExp)[];\n    static maskZipCode1: RegExp[];\n    static maskZipCode2: (string | RegExp)[];\n    static maskPin: RegExp[];\n    static maskPassword: RegExp[];\n    static maskPatientId: (string | RegExp)[];\n    static setCodeMap(inputCode: string, inputId: string): void;\n    static phoneMask(rawValue: string): any;\n    static zipCodeMask(rawValue: string): (string | RegExp)[];\n    static passwordMask(type: string, minLength: number, maxLength: number): any[];\n    static fillZipCode(format: string, length: number): any;\n    static extendMask(mask: any, char: any, length: number): any;\n    static phoneValidator(control: FormControl): {\n        'invalidPattern': boolean;\n    };\n    static noWhitespaceValidator(control: FormControl): {\n        'invalidPattern': boolean;\n    };\n    static zipCodeValidator(control: FormControl): {\n        'invalidPattern': boolean;\n    };\n    static cityValidator(control: FormControl): {\n        'invalidPattern': boolean;\n    };\n    static emailValidator(control: FormControl): {\n        'invalidPattern': boolean;\n    };\n    static pinValidator(control: FormControl): {\n        'invalidPattern': boolean;\n    };\n    static matchPasswords(passwordKey: string, confirmPasswordKey: string): (group: FormGroup) => {\n        [key: string]: any;\n    };\n    static codeValidation(codeValue: string): (control: FormControl) => {\n        [key: string]: any;\n    };\n    static equalityValidation(inputCode: string, equalityCode: string): (group: FormGroup) => {\n        [key: string]: any;\n    };\n}\n"],"file":"validation.service.d.ts"}