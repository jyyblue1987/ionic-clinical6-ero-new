{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/flow_process/flow_inputs/multi_choice/stepinput-multi_choice.component.d.ts"],"sourcesContent":["import { StepInputComponent } from '../stepinput.component';\n/**\n * This class represents an input of type multiple choice.\n *\n * The value its the list of choices selected by the user.\n */\nexport declare class StepInputMultiChoiceComponent extends StepInputComponent {\n    /** @type {any} - Callback function for value changes, coming from the dummy input */\n    changed: any;\n    /** @type {any} - Callback function for focusing the input, coming from the dummy input */\n    touched: any;\n    /** @type {string} - A label containing the choice's body */\n    choiceText: string;\n    /** @type {boolean} - Flag indicating if the dropdown should shown on the input. Used when the style its that of dropdown. */\n    showDropdown: boolean;\n    /** @type {boolean} - Flag indicating if the dropdown its selected. Used when the style its that of dropdown. */\n    dropdownSelected: boolean;\n    /** @type {any} -  */\n    timeoutBlur: any;\n    /** @type {any} - The dom element for the input */\n    dropdownInputEl: any;\n    /** Angular lifecycle callback to check existing values and validate them */\n    ngOnInit(): void;\n    /**\n    * Indicates the checkbox on the input has been checked/unchecked.\n    *\n    * @param opt - The value of the input when the change was made\n    */\n    selectOption(): void;\n    /**\n     * Sets the radio button to checked if there's a value for\n     * the radio.\n     *\n     * @param numberSelected - The value of the radio, 0 if its not checked, different than 0 otherwise.\n     */\n    validate(numberSelected: number): void;\n    /**\n     *\n     */\n    emit(): number;\n    /**\n     * Render the choice text if the values are week days.\n     */\n    renderChoiceText(): void;\n    /**\n     * Updates the value of the dropdown\n     * flag when the input becomes focused.\n     */\n    inputFocus(): void;\n    /**\n     * Updates the value of the dropdown\n     * flag when the input its hovered by a mouse.\n     */\n    inputMousedown(): void;\n    /**\n     * Updates the value of the dropdown\n     * flag when the input losses focus.\n     */\n    inputBlur(): void;\n    /**\n     * Callback that gets executed when a change on the input\n     * has been detected.\n     *\n     * @param fn - The output function defined on the dummy input\n     */\n    handleChangeFunction(fn: any): void;\n    /**\n     * Callback that gets executed when the input becomes\n     * focused (touched).\n     *\n     * @param fn - The output function defined on the dummy input\n     */\n    handleTouchFunction(fn: any): void;\n    /**\n     * Callback that gets executed when a value is written on the input.\n     *\n     * @param fn - The output function defined on the dummy input\n     */\n    handleWrite(value: any): void;\n    /**\n     * Updates the value of the dropdown flag when the input\n     * becomes focused for the first time.\n     */\n    itemTouchStart(): void;\n}\n"],"file":"stepinput-multi_choice.component.d.ts"}