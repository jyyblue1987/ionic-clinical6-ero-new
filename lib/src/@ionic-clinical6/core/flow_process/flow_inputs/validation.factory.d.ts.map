{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/flow_process/flow_inputs/validation.factory.d.ts"],"sourcesContent":["/**\n * Helper class that holds all predefined validator rules\n * for the basic types of inputs and the error messages to show\n * the user when an input its invalid\n *\n * Use the helper methods to add or override input validators and\n * input error messages\n *\n * @example\n *  import { Validators } from '@angular/forms';\n *\n *  InputValidationFactory.setValidatorRule('password',[Validators.required, Validators.minLength(8)])\n */\nexport declare class InputValidationFactory {\n    /**\n     * Adds or overrides a set of validators for the given input style\n     *\n     * @param style the style of input for the validator\n     * @param validators the array of desired validators\n     */\n    static setValidatorRule(style: string, validators: any): void;\n    /**\n     * Returns the set of validation rules assigned to the given style\n     *\n     * @param style the desired style of input\n     */\n    static getValidatorRule(style: string): any;\n    /**\n     * Adds or overrides an error message for the given type of error.\n     *\n     * @param errorType the type of error on the input\n     * @param errorMessage the message to show when the given error its present\n     */\n    static setValidationError(errorType: string, errorMessage: string): void;\n    /**\n     * Returns the error message for the given error type.\n     *\n     * @param errorType the error type\n     */\n    static getValidationError(errorType: string): string;\n    private static validatorRules;\n    private static inputErrors;\n}\n"],"file":"validation.factory.d.ts"}