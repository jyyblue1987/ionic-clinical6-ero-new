{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_inputs/agreement/agreement.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAA+B,SAAS,EAAc,MAAM,eAAe,CAAC;AAE9F,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAI5D;;;;;GAKG;AAkBH,IAAa,0BAA0B,GAAvC,gCAAwC,SAAQ,kBAAkB;IAvBlE;;;;;OAKG;IACH;;QAyBE,8EAA8E;QAC9E,gBAAW,GAAuB,EAAE,CAAC;QAErC,oEAAoE;QACpE,mBAAc,GAAQ,IAAI,CAAC;IAqB7B,CAAC;IAnBC,kCAAkC;IAClC,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,aAAa;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,GAAQ;QACnB,kDAAkD;QAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,iEAAiE;IACjG,CAAC;CACF,CAAA;AA3B6B;IAA3B,SAAS,CAAC,eAAe,CAAC;;mEAAiB;AANjC,0BAA0B;IAjBtC,SAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE;;;;;;;;;;;;;GAaT;KACF,CAAC;GACW,0BAA0B,CAiCtC;SAjCY,0BAA0B","file":"agreement.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { InputState, ChoiceState, InputStyle } from '../input.model';\nimport { StepInputComponent } from '../stepinput.component';\n\nimport { FormGroup } from '@angular/forms';\n\n/**\n * This class represents an input of type agreement.\n * \n * The value its the date the agreement was \n * accepted.\n */\n@Component({\n  selector: 'agreement-checkbox',\n  templateUrl: 'agreement.component.html',\n})\nexport class AgreementCheckboxComponent extends StepInputComponent {\n\n  /** @type {string} - The text to be displayed on the input */\n  choiceText: string;\n\n  /** @type {any} - The dom element for the input */\n  @ViewChild('dropdownInput') dropdownInputEl;\n\n  /** @type {Array<ChoiceState>} - The list of choices coming from   the flow */\n  choiceItems: Array<ChoiceState> = [];\n\n  /** @type {any} - Flag indicating if the choice has been selected */\n  choiceSelected: any = null;  \n\n  /** Angular lifecycle callback. */\n  ngOnInit() {\n    const self = this;\n    // Set Values\n    if (this.value && this.value !== '') {\n      this.choiceSelected = true;\n    }\n  }\n\n  /**\n   * Indicates the checkbox on the input has been checked/unchecked.\n   * \n   * @param opt - The value of the input when the change was made\n   */\n  selectOption(opt: any) {\n    // here send `opt`, the index of the selected item\n    if (!this.choiceSelected)\n      this.choiceSelected = null; // Use the 'null' instead the 'false' value to disable the button\n  }\n}\n\n\n\n"]}