{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_inputs/pre-populated/stepinput-pre-populated.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAA+B,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAG9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAI5D;;;;;;GAMG;AAkBH,IAAa,8BAA8B;AAD3C,2BAA2B;AAC3B,oCAA4C,SAAQ,kBAAkB;IAQpE,YAAmB,YAA8B;QAC/C,KAAK,EAAE,CAAC;QADS,iBAAY,GAAZ,YAAY,CAAkB;QANjD,iCAAiC;QACjC,cAAS,GAAG,EAAE,CAAC;QAEf,4EAA4E;QAC5E,cAAS,GAAY,IAAI,CAAC;IAI1B,CAAC;IAED,kCAAkC;IAClC,QAAQ;QAEN,0DAA0D;QAC1D,+BAA+B;QAC/B,uCAAuC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,CAAS;QACpB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,CAAS;QACpB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC;QAClB,IAAI,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;CACF,CAAA;AA3CY,8BAA8B;IAjB1C,SAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,QAAQ,EAAE;;;;;;;;;;;;GAYT;KACF,CAAC;IACF,2BAA2B;;qCASQ,gBAAgB;GARtC,8BAA8B,CA2C1C;SA3CY,8BAA8B","file":"stepinput-pre-populated.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Clinical6Service } from '../../../clinical6.service';\n\nimport { InputStyle } from '../input.model';\nimport { StepInputComponent } from '../stepinput.component';\n\nimport { FormGroup } from '@angular/forms';\n\n/**\n * This class represents an input of type pre-populated.\n * \n * The value its the value retrieved from a Search Service,\n * in this case the value its not editable and its used for \n * information purposes..\n */\n@Component({\n  selector: 'stepinput-pre-populated',\n  templateUrl: './stepinput-pre-populated.component.html'\n})\n// TODO: Low priority input\nexport class StepInputPrePopulatedComponent extends StepInputComponent {\n\n  /** @type {string} - The role. */\n  roleValue = '';\n\n  /** @type {boolean} - Flag indicating if the type of value its supported. */\n  supported: boolean = true;\n\n  constructor(public captiveReach: Clinical6Service) {\n    super();\n  }\n\n  /** Angular lifecycle callback. */\n  ngOnInit() {\n\n    // even if there's no input, if there's a pre filled value\n    // we send the valid form event\n    // this.choiceChanged.emit(this.value);\n    if (this.value) {\n      if (this.subForm.controls['input'])\n        this.subForm.controls['input'].setValue('true');\n    }\n  }\n\n  /**\n   * Converts the string value to a a camel case.\n   * \n   * @param s - The string to be formatted\n   */\n  snakeToCamel(s: string) {\n    return s.replace(/_\\w/g, function (m) { return m[1].toUpperCase(); });\n  }\n\n  /**\n   * Converts the string value to a a title case.\n   * \n   * @param s - The string to be formatted\n   */\n  snakeToTitle(s: string) {\n    if (!s) return '';\n    let result = s.replace(/_\\w/g, function (m) { return ' ' + m[1].toUpperCase(); });\n    return result[0].toUpperCase() + result.slice(1);\n  }\n}"]}