{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/flow_process/flow_inputs/stepinput.factory.d.ts"],"sourcesContent":["import { InputState } from '../flow_inputs/input.model';\n/**\n * Represents a class where all of the supported\n * types of input are defined by a key value map.\n *\n * It has the ability to override the components used for\n * a type or add new ones via the setMap method.\n *\n * @example <caption> Override existing input </caption>\n *  StepInputFactory.setMap('numeric', MyCustomNumericInput)\n *\n * @example <caption> Add a new type of input </caption>\n *  StepInputFactory.setMap('carousel', CarouselInput)\n */\nexport declare class StepInputFactory {\n    /**\n     * @type {{[id: string] : any]}} - A key/value map containing the relation of the\n     *  type of input to its instance.\n     */\n    static FactoryMap: {\n        [id: string]: any;\n    };\n    /**\n     * Provides the appropriate Input Component for the given input type.\n     *\n     * @param  {InputState} input  - The input model object\n     * @return {class}             - An instance of the component associated to the given input\n     */\n    static factory(input: InputState): any;\n    /**\n     * Sets or adds an InputComponent to the map.\n     * @param {Object} map - A key/val mapping from contentType to Input component\n     */\n    static setMap(map: {\n        [id: string]: any;\n    }): void;\n}\n"],"file":"stepinput.factory.d.ts"}