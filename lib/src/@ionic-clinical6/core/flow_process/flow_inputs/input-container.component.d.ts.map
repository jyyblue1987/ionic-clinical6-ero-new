{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/flow_process/flow_inputs/input-container.component.d.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { InputState, InputStyle } from './input.model';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { StepInputDirective } from './stepinput.directive';\nexport declare class InputContainerComponent {\n    formBuilder: FormBuilder;\n    /**\n     * @type {InputStyle} - Defines the style of the input, this definition its to be\n     * used on the template\n     */\n    InputStyle: typeof InputStyle;\n    /** @type {any} - The list of saved values for the flow step, if present */\n    fields: any;\n    /** @type {InputState[]} - The list of inputs contained in the flow step */\n    inputList: InputState[];\n    /** @type {boolean} - Indicates if the input its editable */\n    readonly: boolean;\n    /** @type {any} */\n    filter: any;\n    /** @type {any} - Represents the step model for the active Flow Step */\n    step: any;\n    /** @type {string} - A global style the input hints */\n    labelStyle: string;\n    /** @type {EventEmmitter} - Callback to tell the FlowStep (or any class using this)\n     *  the Form has changed status */\n    formStatusChanged: EventEmitter<{}>;\n    /** @type {EventEmmiter} - Callback to tell the FlowStep (or any class using this) the Form has changed value */\n    formValueChanged: EventEmitter<{}>;\n    /** @type {EventEmmiter} - Callback to tell the FlowStep which path to take */\n    goToPage: EventEmitter<{}>;\n    /** @type {FormGroup} - The main form containing the inputs (as form controls),\n     *  this is the form used for input validation\n     */\n    mainForm: FormGroup;\n    /** @type {StepInputDirective} - Represents the directive used in the container\n     * template to dinamically add inputs as necessary */\n    inputDirective: StepInputDirective;\n    constructor(formBuilder: FormBuilder);\n    /** Angular lifecycle callback. */\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    rgb2hex(rgb: any): string;\n    forwardGoToPage(event: any): void;\n}\n"],"file":"input-container.component.d.ts"}