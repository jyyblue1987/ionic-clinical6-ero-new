{"version":3,"sources":["../src/@ionic-clinical6/core/flow_process/flow_inputs/numeric/stepinput-numeric.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAA+B,UAAU,EAAE,MAAM,eAAe,CAAC;AACnF,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAIzC,OAAO,EAAE,sBAAsB,EAAE,MAAM,kCAAkC,CAAC;AAC1E,OAAO,gBAAgB,MAAM,2CAA2C,CAAC;AAEzE;;;;GAIG;AAgCH,IAAa,yBAAyB,GAAtC,+BAAuC,SAAQ,sBAAsB;IAQnE,YACS,QAAkB,EAClB,UAAsB;QAE7B,KAAK,EAAE,CAAC;QAHD,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QAG7B,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;YACjC,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC;IAClC,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED;;;OAGG;IACH,YAAY,KAAK,CAAC;CACnB,CAAA;AA7BY,yBAAyB;IA/BrC,SAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BT;KACF,CAAC;qCAWmB,QAAQ;QACN,UAAU;GAVpB,yBAAyB,CA6BrC;SA7BY,yBAAyB","file":"stepinput-numeric.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { FormGroup } from '@angular/forms';\nimport { ValidationService } from '../validation.service';\nimport { StepInputTextComponent } from '../text/stepinput-text.component';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask.js';\n\n/**\n * This class represents an input of type numeric.\n * \n * The value its the number input by the user.\n */\n@Component({\n  selector: 'stepinput-numeric',\n  templateUrl: './stepinput-numeric.component.html'\n})\n\nexport class StepInputNumericComponent extends StepInputTextComponent {\n\n  /** @type {boolean} - Flag indicating if the input has user focus. */\n  focusOut: boolean;\n\n  /** @type {any} - Represents a numeric text mask, used for validation. */\n  numberMask;\n\n  constructor(\n    public platform: Platform,\n    public elementRef: ElementRef,\n  ) {\n    super();\n    this.numberMask = createNumberMask({\n      requireDecimal: true\n    });\n  }\n\n  /** Angular lifecycle callback. */\n  ngOnInit() {\n    this.keyboard.hideKeyboardAccessoryBar(false);\n    this.readOnly && (this.focusOut = this.readOnly);\n  }\n\n  /** \n   * Helper method that gets called when the done button on \n   * the virtual keyboard its pressed.\n   */\n  doneCallback() { }\n}"]}