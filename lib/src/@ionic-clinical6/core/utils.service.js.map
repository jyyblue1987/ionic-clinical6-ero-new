{"version":3,"sources":["../src/@ionic-clinical6/core/utils.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAO,iBAAiB,EAAU,MAAM,eAAe,CAAC;AAG/D,IAAa,YAAY,GAAzB;IAMI,YAAY,WAA8B;QACtC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;IACzC,CAAC;IAED;;;;;;;QAOI;IACJ,cAAc,CAAC,OAAO,GAAG,gBAAgB,EAAE,sBAA+B,IAAI,EAAE,wBAAiC,IAAI,EAAE,OAAgB;QACnI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACxC,OAAO,EAAE,OAAO;gBAChB,mBAAmB,EAAE,mBAAmB;gBACxC,qBAAqB,EAAE,qBAAqB;gBAC5C,OAAO,EAAE,OAAO;aACnB,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,aAAa;QACT,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;IACL,CAAC;CAEJ,CAAA;AA5CY,YAAY;IADxB,UAAU,EAAE;qCAOgB,iBAAiB;GANjC,YAAY,CA4CxB;SA5CY,YAAY","file":"utils.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { App, LoadingController, Config } from 'ionic-angular';\n\n@Injectable()\nexport class UtilsService {\n    /**  @param {any} loader - pointer to the current instance of the LoadingController */\n    loader: any;\n    /**  @param {LoadingController} loadingController - Loading Controller instance */\n    loadingController: LoadingController;\n\n    constructor(loadingCtrl: LoadingController) {\n        this.loadingController = loadingCtrl;\n    }\n\n    /**\n     * @function presentLoading - this creates a new Loading Controller and shows a the loading indicator\n     *\n     * @param content                         - The html content for the loading indicator.\n     * @param {boolean} dismissOnPageChange   - Whether to dismiss the indicator when navigating to a new page. Default true.\n     * @param {boolean} enableBackdropDismiss - Whether the loading indicator should be dismissed by tapping the backdrop. Default true.\n     * @param {String} spinner                - The name of the SVG spinner for the loading indicator. Optional\n     **/\n    presentLoading(content = 'Please wait...', dismissOnPageChange: boolean = true, enableBackdropDismiss: boolean = true, spinner?: string) {\n        if (!this.loader) {\n            this.loader = this.loadingController.create({\n                content: content,\n                dismissOnPageChange: dismissOnPageChange,\n                enableBackdropDismiss: enableBackdropDismiss,\n                spinner: spinner\n            });\n        }\n        this.loader.present();\n        this.loader.onDidDismiss(() => {\n            this.loader = null;\n            console.log('Dismissed loading');\n        });\n    }\n\n    /**\n     * @function presentLoading - Makes sure to destroy the existing Loading Controller\n    **/\n    dismissLoader() {\n        if (this.loader) {\n            this.loader.dismiss();\n            this.loader = null;\n        }\n    }\n\n}"]}