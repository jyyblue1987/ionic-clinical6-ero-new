{"version":3,"sources":["../src/@ionic-clinical6/core/ediary/anti-pattern-examples.ts"],"names":[],"mappings":"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","file":"anti-pattern-examples.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { clinical6, User, flowService, Flow, eDiaryService, Client, Entry } from 'clinical6';\nimport * as moment from 'moment';\nimport { Flows } from '../';\nimport { EdiaryIonicService } from './ediary.service';\n\n@Injectable()\nexport class EdiaryIonicServiceAP extends EdiaryIonicService {\n\n  entryGroups;\n\n  constructor(\n  ) {\n    super();\n  }\n  \n  getEntryGroupId(permalink) {\n    let id = null;\n    if (this.entryGroups) {\n      let entry = this.entryGroups.find( entry => entry.permanentLink === permalink);\n      if (entry)\n        id = entry.id;\n    }\n    return id;\n  }\n\n  getEntryGroup(permalink: string) {\n    let entryGroup = null;\n    if (this.entryGroups) {\n      entryGroup = this.entryGroups.find( entry => entry.permanentLink === permalink);\n    }\n    return entryGroup;\n  }\n\n  // The following is a perfect example of the Promise Anti-Pattern of the getEntry method\n  getEntriesAP(permalink?: string, date?: string) {\n    return new Promise<any> ( (resolve, reject) => {\n      this.getEntryGroups()\n      .then ( entryGroups => {\n        let mobileUser = clinical6.user;\n          // set the filter\n          let filter = {};\n          if (permalink)\n            filter['entry_group_id'] = this.getEntryGroupId(permalink);\n          if (date)\n            filter['date'] = date;\n          // mobileUserService.getEntries(mobileUser, null, 'networkFirst') // alternative\n          mobileUser.getEntries(filter, 'networkFirst')\n          // mobileUser.getEntries(null, 'cacheFirst')\n          .then( entries => {\n              // console.log('EdiaryIonicService getEntries', entries);\n              resolve(entries);\n            })\n            .catch( reason => reject(reason));\n        })\n        .catch( reason => reject(reason) );\n    });\n  }\n\n  // The following is a perfect example of the Promise Anti-Pattern of the getEntryGroups method\n  getEntryGroupsAP() {\n    // fetch the list of entryGroups\n    return new Promise<any> ( (resolve, reject) => {\n      if (this.entryGroups) {\n        resolve(this.entryGroups);\n        return;\n      }\n      const self = this;\n      eDiaryService.get('networkFirst') // should be cacheFirst\n      .then( entryGroups => {\n        console.log('EdiaryIonicService getEntryGroups', entryGroups);\n        self.entryGroups = entryGroups;\n        resolve(entryGroups);\n      })\n      .catch( reason => {\n        console.log('EdiaryIonicService getEntryGroups error', reason);\n        reject(reason);\n      });\n    });\n  }\n\n  // The following is a perfect example of the Promise Anti-Pattern of the getFlow method\n  getFlowAP(permalink: string) {\n    return new Promise<Flow> ( (resolve, reject) => {\n      let localFlow = this.flows[permalink];\n      if (localFlow) {\n        localFlow.reset();\n        resolve(localFlow);\n        return;\n      }\n      const self = this;\n      flowService.getFlow(permalink)\n      .then( flow => {\n        // set the capture of all the paths to false except the last one\n        // ... in case the flow is not properly set from the platform\n        for (let step of flow.steps)\n          for (let path of step['paths']) {\n            path.capture = false;\n          }\n        self.flows[permalink] = flow;\n        resolve(flow);\n      })\n      .catch( reason => reject(reason));\n    });\n  }\n\n  // The following is a perfect example of the Promise Anti-Pattern of the addRecord method\n  addRecordAP(permalink: string, flow: Flow, entryDate: string, templateId?: number) {\n    return new Promise<any> ( (resolve, reject) => {\n      const self = this;\n      console.log('EdiaryIonicService addRecord');\n      this.addEntry(permalink, entryDate, templateId)\n      .then ( entry => {\n\n        const currEntry = (entry instanceof Entry) ? entry : entry['id'];\n        \n        flow.entry = currEntry;\n        flow.owner = currEntry['owner'].id;\n\n        // check if the flow is the proper one\n        if (flow.id !== currEntry['template'].flow_process.id) {\n          console.warn('EdiaryIonicService addRecord, flow inconsistent with created entry', JSON.stringify(entry), JSON.stringify(flow));\n          reject('Something went wrong with the communications with the server. Details: EdiaryIonicService addRecord inconsistent flow.');\n        }\n\n        flow.save()\n        .then( flow_response => {\n            self.updateEntry(entry, flow, flow_response)\n            .then ( () => resolve(currEntry) )\n            .catch ( reason => reject(reason));\n        })\n        .catch ( reason => reject(reason));\n      })\n      .catch ( reason => reject(reason));\n    });\n  }\n\n  // updateEntryNew(entry, flow_response) {\n  //   // Note: factory not yet supported\n  //   factory.get(flow_response)\n  //   .then( flowResponse => {\n  //     console.log('EdiaryIonicService updateEntryNew, flowResponse deserialized', flowResponse);\n  //     if ( !entry.captured_value_group)\n  //       entry.captured_value_group = { id: parseInt(flowResponse.relationships.captured_value_group.data.id), type: flowResponse.relationships.captured_value_group.data.type};\n  //     else\n  //       entry.captured_value_group.id = parseInt(flowResponse.relationships.captured_value_group.data.id);\n  //   })\n  //   .catch( err => {\n  //     console.log('EdiaryIonicService updateFlow deserialization error', err);\n  //   });\n  // }\n\n  // The following is a perfect example of the Promise Anti-Pattern of the getFlow method\n  addEntryAP (permalink: string, entryDate: string, templateId?: number) {\n    return new Promise<any> ( (resolve, reject) => {\n\n      let mobileUser = Client.instance.user;\n      // fetch the list of entryGroups\n      this.getEntryGroups()\n      .then ( entryGroups => {\n\n        let entryGroup = this.getEntryGroup(permalink);\n        if (!entryGroup)\n          throw 'Platform error: entryGroup ' + permalink + 'does not exist.';\n        let template;\n        if (templateId)\n          template = entryGroup.entry_templates.find( el => el.id == templateId);\n        else\n          template = entryGroup.entry_templates[0];\n        let date = moment(entryDate).format('YYYY-MM-DD');\n        console.log('addEntry date, template', date, template);\n\n        mobileUser.addEntry( {'date': date}, template )\n        .then( entry => {\n          console.log('eDiary addEntry', entry);\n          resolve (entry);\n        })\n        .catch( reason => {\n          console.warn('eDiary addEntry fail', reason);\n          reject (reason);\n        });\n      })\n      .catch( reason => {\n          console.warn('eDiary addEntry fail', reason);\n          reject (reason);\n      });\n    });\n  }\n\n}\n"]}