{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/badges/badges-plugin.service.d.ts"],"sourcesContent":["import { Badge, likeInfo } from './badge-models';\n/**\n * A Service for retrieving the badges.\n * This service use a matrix 3*m for storing and displaying the badges that is the one used in our projects.\n */\nexport declare class BadgesPluginService {\n    /** @type {Array} badges - All the badges available on the platform. */\n    badges: Array<any>;\n    /** @type {Array} recentBadges - The recent badges. */\n    recentBadges: Array<any>;\n    /** @type {Array} awardedBadges - The awarded badges. */\n    awardedBadges: Array<any>;\n    /** @type {boolean} loaded - A boolean variable that can be used to know if the data has been loaded. */\n    loaded: boolean;\n    constructor();\n    /**\n     * Use the init() method for starting the badges service.\n     * @param {!boolean} likes - True if you need 'Likes' informations on the badges too, otherwise false.\n     * @param {!boolean} companion - True if you are a companion, otherwise false if study_patient.\n     * @param {!string} companionProfileId - If companion you must enter your profile id for fetching your 'Likes'.\n     */\n    init(likes?: boolean, companion?: boolean, companionProfileId?: string): Promise<void>;\n    /**\n     * The private method for retrieving all the badges informations.\n     * @param {!boolean} likes - True if you need 'Likes' informations on the badges too, otherwise false.\n     * @param {!boolean} companion - True if you are a companion, otherwise false if study_patient.\n     * @param {!string} companionProfileId - If companion you must enter your profile id for fetching your 'Likes'.\n     */\n    private fetchBadges(likes, companion, companionProfileId);\n    fetchAwardedBadges(): Promise<any>;\n    /**\n     * @param aw_item - The awarded badge.\n     * @param {!boolean} companion - True if you are a companion, otherwise false if study_patient.\n     * @param {!string} companionProfileId - If companion you must enter your profile id for fetching your 'Likes'.\n     */\n    fetchLikes(aw_item: any, companion: any, companionProfileId: any): Promise<void>;\n    /**\n     * @param allBadgesData - All the badges on the platform.\n     * @param {!boolean} likes - True if you need 'Likes' informations on the badges too, otherwise false.\n     */\n    private fillBadges(allBadgesData, likes?);\n    /**\n     * @param badgesArray - All the badges on the platform.\n     * @param badge - A single badge.\n     * @param {!boolean} likes - True if you need 'Likes' informations on the badges too, otherwise false.\n     */\n    private fillArray(badgesArray, badge, likes?);\n    /**\n     * @param recentBadgesArray - The array of recent badges.\n     * @param badge - A single badge.\n     */\n    private fillRecentArray(recentBadgesArray, badge);\n    /**\n     *  For adding informations on the awarded badges items\n     * @param id - The id of the awarded badge.\n     * @param {!boolean} likes - True if you need 'Likes' informations on the badges too, otherwise false.\n     */\n    private findAwardedInfo(id, likes?);\n    get(type: any, i: any, j: any): any;\n    checkDisabled(type: any, i: any, j: any, direction: any): boolean;\n    next(type: any, i: any, j: any): {\n        item: any;\n        i: any;\n        j: any;\n    };\n    prev(type: any, i: any, j: any): {\n        item: any;\n        i: any;\n        j: any;\n    };\n    updateLike(id: any): void;\n    /**\n     * Methods for like, unlike and checking the like\n     * @param {!Badge} currBadge - The selected badge.\n     * @param {!boolean} companion - True if you are a Companion.\n     * @param {!string} companionProfileId - If companion you must enter your profile id for fetching your 'Likes'.\n     */\n    like(currBadge: Badge, companion?: any, companionProfileId?: string): Promise<void>;\n    /**\n     * Methods for like, unlike and checking the like\n     * @param {!Badge} currBadge - The selected badge.\n     * @param {!boolean} companion - True if you are a Companion.\n     * @param {!string} companionProfileId - If companion you must enter your profile id for fetching your 'Likes'.\n     */\n    checkLike(currBadge: Badge, companion?: boolean, companionProfileId?: string): Promise<likeInfo>;\n}\n"],"file":"badges-plugin.service.d.ts"}