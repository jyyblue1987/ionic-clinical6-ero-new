{"version":3,"sources":["../src/@ionic-clinical6/core/clinical6.service.ts"],"names":[],"mappings":"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","file":"clinical6.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Events } from 'ionic-angular';\n// import { PROFILE_DEMO } from './mocks/';\nimport {\n  clinical6,\n  contentService,\n  flowService,\n  appMenuService,\n  userService,\n\n  Notification,\n  Flow,\n  Profile,\n  systemService,\n  AppMenu,\n  Client,\n  Content\n} from 'clinical6';\nimport { AppConfig } from './config/app.config';\n\ndeclare var fabric;\n\n@Injectable()\nexport class Clinical6Service {\n\n  supportContactInfo: any = {\n    title: '',\n    image: '',\n    image_backup: '',\n    description: '',\n    phone_number: '',\n    email_support: '',\n  };\n  userID: string;\n  siteID: string;\n  profile: any;\n  xAuth_token: string;\n  // mobile_user: any;\n\n  /**\n   * TODO: once V3 is integrated this won't be needed anymore\n   */\n  useDynContentV2: boolean = false;\n\n  mobileMenus: any;\n  menuBadges: any = {Surveys: 0, Notifications: 0, ManageSiteUpdates: 0 };\n  notifications: Array<any>;\n  flows: { [key: string]: Flow } = { };\n\n  constructor(\n    public events: Events,\n    public appConfig: AppConfig,\n  ) {\n  }\n\n  /**\n   * Get Notifications\n   *\n   * @return {Promise<Notification[]>}\n   */\n\n  async getNotifications(): Promise<Notification[]> {\n    try {\n      const notifications = await userService.getNotifications(undefined, undefined);\n        this.notifications = notifications;\n        this.menuBadges.Notifications = notifications.filter(item => (item.status !== 'read')).length;\n        return this.notifications;\n      } catch (e) {\n        throw('Notifications failed');\n      }\n  }\n\n  /**\n   * Get Dynamic Content\n   * @param {String} className Name of class to be queries\n   * @param {Number} page Page number currently on (0 is all)\n   * @param {Number} itemCount Total number of items on a page\n   * @return {Promise} Promise for use with Angularjs\n   */\n  async getDynamicContent(className: string, page: number = 0, itemCount: number = 0) {\n      /**\n       * TODO: once V3 is integrated this won't be needed anymore\n       */\n      if (this.useDynContentV2) {\n        try {\n          var httpQuery = '?page=0' + page + '&per_page=' + itemCount;\n          const response = await Client.instance.fetch('/api/dynamic/' + className + httpQuery);\n          var result;\n          result = response.content.map(function (obj) {\n            return new Content(obj);\n          });\n          return result;\n        } catch (err) {\n          throw(err);\n        }\n      }\n      else {\n        try {\n          const data = await contentService.getContent(className);\n          return data;\n        } catch(e) {\n          this.onError(e);\n          throw('Dynamic Content Failed');\n        }\n      }\n  }\n\n\n  /**\n   * Get Flow\n   * @param {String} id The flow for a certain item\n   */\n  async getFlow(id: string) {\n    try {\n      const flow = await flowService.getFlow(id);\n      return flow;\n    } catch(reason) {\n      this.onError(reason);\n      throw(reason);\n    }\n  }\n\n  /**\n   * Get Menus (Mobile Menus)\n   * @return {Promise} Promise for use with Angularjs\n   */\n  async getMenus(useOldApi?): Promise<AppMenu[]> {\n      if (this.mobileMenus && this.mobileMenus.length > 0) {\n        return this.mobileMenus;\n      } else {\n        try {\n          let menus;\n          if (useOldApi) {\n            let response = await clinical6.fetch(`/api/v2/mobile_menus?include_subcategories=true`);\n            menus = response.json.mobile_menus;\n          } else {\n            menus = await appMenuService.get();\n          }\n          this.mobileMenus = Object.keys(menus).map(key => menus[key]);\n          if (!this.menuBadges) {\n            this.menuBadges = {};\n          }\n          return this.mobileMenus;\n        } catch (e) {\n          this.onError(e);\n          throw('Mobile Menus failed');\n        }\n      }\n  }\n\n  /**\n   * Get Profile\n   * @return {Promise} Promise for use with Angularjs\n   */\n  async getProfile(refresh?: boolean) {\n    // if (AppConfig.demoMode) {\n    //   return new Promise ( resolve => PROFILE_DEMO );\n    // }\n    if (this.profile && !refresh) {\n      return this.profile;\n    } else {\n        try {\n          const profile = await userService.getProfile();\n            this.profile = profile as Profile;\n            // sessionStorage.setItem('profile', angular.toJson(profile));\n            return this.profile;\n          }\n          catch(reason) {\n            this.onError(reason);\n            throw(reason);\n          }\n      }\n  }\n\n  /**\n   * Get Site\n   * @param {string} permanent_link - Permanent Link for site (given by user at login)\n   */\n  async _getSite(permanent_link: string) { // not used for the time being, see AppService\n    try {\n      const data = await clinical6.fetch('/api/v2/site_start/sites');\n        const site = data.sites.filter(obj => (obj.permanent_link === permanent_link))[0];\n        if (site) {\n          return site;\n        } else {\n          throw({ message: 'Could not find the site from server.', error_details: 'No match with the given site id' });\n        }\n      }\n      catch(reason) {\n        this.onError(reason);\n        throw(reason);\n      }\n  }\n\n  /**\n   * Logs in the user\n   * @param {string} username The username required for login\n   * @param {string} password the password required for login\n   * @return {Promise} Promise for use with Angularjs\n   */\n  async login(username: string, password: string) {\n    try {\n        const data = await clinical6.signIn(username, password);\n        localStorage.setItem('authToken', data.auth_token);\n        try {\n          const profile = await this.getProfile(true);\n          if (fabric && fabric.Crashlytics) {\n            fabric.Crashlytics.setUserIdentifier(username);\n          }\n            return profile;\n          }\n          catch(reason) {\n              throw({ message: reason.friendly, error_details: reason.details });\n          }\n      }\n      catch(reason) {\n          throw(reason);\n      }\n  }\n\n  /**\n   * Logs out the user\n   * @return {Promise} Promise for use with Angularjs\n   */\n  async logout() {\n    try {\n      await clinical6.signOut();\n      localStorage.clear();\n      delete this.profile;\n      this.events.publish('user:logout');\n      return 'Successfully Logged Out';\n    }\n    catch(e) {\n      localStorage.clear();\n      delete this.profile;\n      this.events.publish('user:logout');\n      throw('Logout Failed');\n    }\n  }\n\n  /**\n   * Set the pin for a confirmation pin token\n   * @param {string} pin a user input to set a pin\n   * @param {string} pin_confirmation a token provided by the xauth to setup a pin.\n   */\n  async setPin(pin: string, pin_confirmation: string) {\n    try {\n      const params = { 'pin': pin, 'pin_confirmation': pin_confirmation, 'invitation_token': this.xAuth_token };\n      // clinical6.fetch('/api/mobile_users/set_pin ', 'PUT', params ).then( data => {\n      // clinical6.fetch('/api/mobile_users/accept_invitation ', 'PUT', params ).then( data => {\n      const data = await userService.acceptInvitation(this.xAuth_token, pin);\n      console.log('setPin, result: ', data);\n      try {\n          // login\n          const data = await this.login(this.userID, pin);\n          return 'PIN Successfully Entered and successfully logged in';\n      } catch(reason) {\n              console.log('Pin successsfully entered by login failed ' + reason.message + ' ' + reason.error_details);\n              throw(reason);\n      }\n    }\n    catch(reason) {\n          console.log('Set Pin failed ' + reason.message + ' ' + reason.error_details);\n          throw(reason);\n    }\n  }\n\n  /**\n   * On Error (Event)\n   * @param  {Error} e Error object returned from server\n   * @return {null} returns nothing\n   */\n  onError(e: any) {\n    const self = this;\n    const code = {\n      INVALID_AUTHTOKEN: 50361\n    };\n\n    if (fabric && fabric.Crashlytics) {\n      fabric.Crashlytics.addLog('ERROR: ' + JSON.stringify(e));\n      fabric.Crashlytics.sendNonFatalCrash('ERROR: ' + JSON.stringify(e));\n    }\n\n\n    if (e.internal_code) {\n      switch (e.internal_code) {\n        case code.INVALID_AUTHTOKEN:\n          console.log('API error, case of invalid token, logging out.');\n          self.logout();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * silentSignIn()\n   * sets the Clinical6 auth-token from the local storage\n   * @return {boolean} returns true if successfull, false otherwise\n   */\n  silentSignIn() {\n    if (localStorage.getItem('authToken')) {\n      clinical6.authToken = localStorage.getItem('authToken');\n      return true;\n    }\n    else {\n      console.log('silentSignIn failed, the authToken was not stored');\n      return false;\n    }\n  }\n}\n"]}