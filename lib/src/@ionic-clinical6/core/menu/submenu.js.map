{"version":3,"sources":["../src/@ionic-clinical6/core/menu/submenu.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,OAAO,EACL,aAAa,EACb,cAAc,EACd,iBAAiB,EACjB,eAAe,EACf,SAAS,EACT,cAAc,EACd,eAAe,EAChB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AACtC,OAAO,EAAW,WAAW,EAAQ,MAAM,WAAW,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,8BAA8B,CAAC;AAqBrD,IAAa,0BAA0B,GAAvC;IASE,YAAmB,YAA8B,EACxC,GAAkB,EAClB,MAAyB,EACzB,SAA0B,EAC1B,QAAwB,EACxB,SAAoB,EACpB,WAAwB,EACxB,QAAyB,EACzB,SAA2B;QARjB,iBAAY,GAAZ,YAAY,CAAkB;QACxC,QAAG,GAAH,GAAG,CAAe;QAClB,WAAM,GAAN,MAAM,CAAmB;QACzB,cAAS,GAAT,SAAS,CAAiB;QAC1B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,cAAS,GAAT,SAAS,CAAkB;QAGlC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAE5C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,qBAAqB,GAAG,cAAc,CAAC;IAE9C,CAAC;IACD,QAAQ,CAAC,QAAiB;QACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC;QAChH,CAAC;IACH,CAAC;IACD;;;;OAIG;IACH,oBAAoB,CAAC,IAAU;IAE/B,CAAC;IAED,QAAQ,CAAC,QAAa;QACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;aACjC,IAAI,CAAC,IAAI;YAER,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI;oBACd,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC,CAAC;gBACF,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC;qBACjC,IAAI,CAAC,CAAC,MAAM;oBACX,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACxB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM;oBACd,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,MAAM,CAAC,CAAC;oBAErD,qEAAqE;oBACrE,8CAA8C;oBAC9C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;oBACtB,2DAA2D;gBAC7D,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,yCAAyC,CAAC,CAAC;YAClE,CAAC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,MAAM;YACX,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,GAAG,MAAM,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IACD,SAAS,CAAC,QAAgB,OAAO,EAAE,SAAiB;QAClD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,aAAa;YACvB,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,IAAI;oBACb,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEC,gEAAgE;IAChE,QAAQ,CAAC,IAAS;QAChB,MAAM,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;IAC1D,CAAC;CACJ,CAAA;AAtGY,0BAA0B;IAnBtC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE;;;;;;;;;;;;;;;GAeT;KACF,CAAC;qCAUiC,gBAAgB;QACnC,aAAa;QACV,iBAAiB;QACd,eAAe;QAChB,cAAc;QACb,SAAS;QACP,WAAW;QACb,cAAc;QACb,eAAe;GAjBzB,0BAA0B,CAsGtC;SAtGY,0BAA0B","file":"submenu.js","sourcesContent":["import { Component } from '@angular/core';\n\nimport {\n  NavController,\n  ViewController,\n  LoadingController,\n  ModalController,\n  NavParams,\n  MenuController,\n  AlertController\n} from 'ionic-angular';\n\nimport { Clinical6Service } from '../clinical6.service';\nimport { MenuService } from './menu.service';\n\nimport { AppConfig } from '../config';\nimport { AppMenu, flowService, Flow } from 'clinical6';\nimport { Flows } from '../flow_process/flow-factory';\n\n@Component({\n  selector: 'sliding-submenu',\n  templateUrl: 'submenu.html'\n})\nexport class SlidingMenuSubCategoryPage {\n  pages: Array<AppMenu>;\n  menuItem: AppMenu;\n  loadingCtrl: any;\n  loadAsDynamicContent: boolean;\n\n  loadingProcess: boolean;\n  loadFlowProcessAction: string;\n\n  constructor(public captiveReach: Clinical6Service,\n    public nav: NavController,\n    public loader: LoadingController,\n    public modalCtrl: ModalController,\n    public viewCtrl: ViewController,\n    public navParams: NavParams,\n    public menuService: MenuService,\n    public menuCtrl?: MenuController,\n    public alertCtrl?: AlertController\n  ) {\n\n    this.menuItem = this.navParams.get('menu');\n    this.pages = this.menuItem['subcategories'];\n\n    this.loadingProcess = false;\n    this.loadFlowProcessAction = 'flow_process';\n\n  }\n  openPage(menuItem: AppMenu) {\n    if (menuItem.action === this.loadFlowProcessAction) {\n      this.goToFlow(menuItem);\n      return;\n    }\n\n    const nextScreen = this.menuService.getComponent(menuItem);\n    if (nextScreen) {\n      this.nav.push(nextScreen.page, Object.assign({ menu: menuItem }, nextScreen.options), AppConfig.animationOpt);\n    }\n  }\n  /**\n   * This is called in case a flow is completed\n   * it should be overridden whenever needed\n   * @param flow\n   */\n  flowCompleteCallback(flow: Flow) {\n\n  }\n\n  goToFlow(menuItem: any) {\n    this.loadingProcess = true;\n    flowService.getFlow(menuItem.action)\n      .then(flow => {\n\n        if (flow.first) {\n          flow.end = (step) => {\n            this.flowCompleteCallback(flow);\n          };\n          flowService.getInputDataByFlow(flow)\n            .then((result) => {\n              this.loadingProcess = false;\n              this.nav.push(Flows.Factory(flow.first), { step: flow.first });\n              this.menuCtrl.close();\n            }).catch((result) => {\n              this.loadingProcess = false;\n              console.error('Flow Data Retrieval Error: ', result);\n\n              // TODO: Ignoring errors here because of a bug on the Mobile Menu API\n              // returning flow id instead of permanent_link\n              this.nav.push(Flows.Factory(flow.first), { step: flow.first });\n              this.menuCtrl.close();\n              // this.showError(null, 'Error Connecting to Server. (2)');\n            });\n        }\n        else {\n          this.loadingProcess = false;\n          this.showError(null, 'Details: received flow is inconsistent.');\n        }\n      })\n      .catch(reason => {\n        this.loadingProcess = false;\n        this.showError(null, 'Details: ' + reason);\n      });\n  }\n  showError(title: string = 'Error', errorText: string) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: errorText,\n      cssClass: 'email-alert',\n      buttons: [\n        {\n          text: 'Ok',\n          handler: data => {\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n    // to fix the issue related to the fetch method for old endpoint\n    getImage(page: any) {\n      return `url(${page.image.url || page.image.image.url})`;\n    }\n}"]}