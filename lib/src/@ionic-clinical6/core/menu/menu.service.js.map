{"version":3,"sources":["../src/@ionic-clinical6/core/menu/menu.service.ts"],"names":[],"mappings":"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","file":"menu.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { App, Events } from 'ionic-angular';\n\nimport { Clinical6Service } from '../clinical6.service';\nimport { AppConfig } from '../config';\n\nimport { ResourcesPage } from '../pages/resources/resources';\n\nimport { AppMenu } from 'clinical6';\n\nimport { BasePage } from '../pages/base/base-page';\n\n@Injectable()\nexport class MenuService {\n  menus: Array<AppMenu>;\n  demoMenu: boolean = false;\n\n  points: number;\n  alerts: number;\n\n  /**\n   * @type {Object} - Add an item for every new menu item and routing path\n   */\n  static FactoryMap: Array<{\n    test: ( m: AppMenu) => boolean,  // This is a test function used to lookup\n                                        //    the items in the map\n\n    page?: any,                         // This is the page to be loaded when a\n                                        //    matching item is found\n    options?: any,                      // Options to be passed to the Page above\n\n    function?: ( m: AppMenu) => {page: any, options?: any}  // Function retirning a { page: ..., options: ... }\n\n    }> = [];\n\n  constructor(\n    public app: App,\n    public captiveReach: Clinical6Service,\n    public events: Events\n  ) {\n    this.menus = [];\n    this.demoMenu = false;\n  }\n\n  /**\n   *\n   * @param menuItem Custom routing handler to be defined by the calling app\n   */\n  customFactory (menuItem: AppMenu) {\n    return null;\n  }\n\n  getMenuItem(test: (m: AppMenu) => boolean) {\n      return this.menus.find((menuItem) => {\n        return test(menuItem);\n      });\n  }\n\n  getComponent(m: AppMenu) {\n      var matchingItem = MenuService.FactoryMap.find((item) => {\n        return item.test(m);\n      });\n      if (!matchingItem) return null;\n\n      if (matchingItem.function) {\n        return matchingItem.function(m);\n      }\n      if (matchingItem) return { page: matchingItem.page, options: matchingItem.options };\n      else return null;\n  }\n  initPages(useOldApi = false) {\n    return this.reloadMenus(useOldApi);\n  }\n\n  // TODO determine if mobile menus should be passed as attribute to tags instead of as service\n  // Menu items could be altered by either badge updates or change of menus on server.\n  //\n  reloadMenus (useOldApi = false) {\n    const self = this;\n    return new Promise( resolve => {\n      if (this.menus.length > 0) resolve();\n\n      // Dynamic data on the Menu\n      this.points = 1000;\n      this.alerts = 2;\n\n      // Set our app's pages through mobile menus.  We use the service so we can store the\n      // menus into local storage and use our own error handling.\n      const self = this;\n      // Why is this necessary - why not just have a method that gets the page?\n      this.captiveReach.getMenus(useOldApi)\n      .then( menus => { // success\n          console.log('MenuService, menus: ', menus);\n          this.menus = menus.sort((a, b) => { return (a.position - b.position); });\n          if (this.demoMenu) {\n              this.addDemoMenuItems();\n          }\n          resolve();\n      })\n      .catch( reason => {\n          console.log('MenuService, menus failed: ', reason);\n          // failure\n          ////////////////////////////////////\n          // DEBUG: ADD MENU ITEMS FOR TESTS\n          if (this.demoMenu) {\n              this.addDemoMenuItems();\n          }\n          resolve();\n          ////////////////////////////////////\n      });\n\n    });\n  }\n\n\n  addMenuItem (menu: any) {\n    this.menus.push(menu);\n  }\n\n  addDemoMenuItems() {\n      DEMOMENUITEMS.forEach( (i) => { this.menus.push(i); });\n  }\n\n  //////////////////////////////\n  // DEBUG ADD ONS\n  goToDemoMenu(thisRef: MenuService) {\n      // thisRef.nav.push(DemoPage, { }, thisRef.appService.animationOpt);\n  }\n\n  addDebugMenuItems() {\n     DEBUGMENUITEMS.forEach( (i) => { this.menus.push(i); });\n  }\n\n  //////////////////////////////\n}\n\nconst DEMOMENUITEMS: any = [\n  {\n    title: 'My Profile',\n    'action': 'profile',\n    'action_object': null,\n    'id': 1,\n    'position': 1,\n    'image': {\n        'url': 'https://captivereach-ppdpassport.s3.amazonaws.com/uploads/staging/cms/mobile_menu/image/1/f095ee1e92f854242d9ea86fb509512ed5fb61b7.png',\n      },\n  },\n  {\n    title: 'Points Earned',\n    'action': 'rewards',\n    'action_object': null,\n    'id': 2,\n    'position': 2,\n    'image': {\n        'url': 'https://captivereach-ppdpassport.s3.amazonaws.com/uploads/staging/cms/mobile_menu/image/2/3e1e7a9bdb0c007e5f8ea3aa277e0b321e33c06e.png',\n    }\n  },\n  {\n    title: 'Alerts',\n    'action': 'alerts',\n    'action_object': null,\n    'id': 3,\n    'position': 3,\n    'image': {\n        'url': 'https://captivereach-ppdpassport.s3.amazonaws.com/uploads/staging/cms/mobile_menu/image/3/ecd538e0c37aa1662e5fb4c767e36f26fbae4f54.png',\n    }\n  },\n  {\n    title: 'Manage Site Profile',\n    'action': 'no_action',\n    'action_object': null,\n    'id': 5,\n    'position': 5,\n    'image': {\n        'url': 'https://captivereach-ppdpassport.s3.amazonaws.com/uploads/staging/cms/mobile_menu/image/5/1b3abb22a4152556b03809d53f4650494daf8297.png',\n    }\n  },\n  {\n    title: 'Resources',\n    'action': 'resources',\n    'action_object': null,\n    'id': 6,\n    'position': 6,\n    'image': {\n        'url': 'https://captivereach-ppdpassport.s3.amazonaws.com/uploads/staging/cms/mobile_menu/image/6/939cf911af6fb10ac3be215ef957e5242362a6c8.png',\n    }\n  },\n];\n\nconst DEBUGMENUITEMS: any = [\n    {\n    title: 'Demo Item',\n    'action': 'no_action',\n    'action_object': null,\n    'id': 1,\n    'position': 1,\n    'image': {\n      'url': 'https://captivereach-ppdpassport.s3.amazonaws.com/uploads/staging/cms/mobile_menu/image/4/main_386ac30eb9311a6ce956571f076cb4d9eccbb68a.png'\n    }\n  }\n];"]}