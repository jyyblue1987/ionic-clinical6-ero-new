{"version":3,"sources":["../src/@ionic-clinical6/core/modal/alert-modal.ts"],"names":[],"mappings":"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","file":"alert-modal.js","sourcesContent":["/* globals Clinical6 */\nimport { Component, ViewChild, } from '@angular/core';\nimport { NavController, NavParams, ViewController } from 'ionic-angular';\nimport { Modal, ModalController } from 'ionic-angular';\n\n// import { ContactPPDPage } from '../../pages/contact-PPD/contact-PPD';\n\n@Component({\n  selector: 'alert-modal',\n  templateUrl: 'alert-modal.html'\n})\nexport class AlertModalPage {  // differently from Help modal page this doesn't support html inputs. The two modals need to be merged anytime soon.\n  type: string;\n  title: string;\n  subTitle: string;\n  body: string;\n  pageRef: any;\n  dismissCallback: any;\n  newRoot: any;\n  buttons: Array<any>;\n  self: AlertModalPage = this;\n  static contactPage: any;  // Set this up on app\n\n  iconClass = {\n    'type_error': 'app-p6-icon-info',\n    'type_info': 'app-p6-icon-info'\n  };\n\n  constructor(  public params: NavParams,\n                public viewCtrl: ViewController) {\n    this.pageRef          = this.params.get('ref');\n    this.type             = this.params.get('type');\n    this.title            = this.params.get('title');\n    this.subTitle         = this.params.get('subTitle');\n    this.body             = this.params.get('bodyText');\n    this.dismissCallback  = this.params.get('callbackFunction');\n    this.newRoot          = this.params.get('newRoot');\n    this.buttons          = this.params.get('buttons') || [\n      { title: 'Contact Us', action: (self) => { self.contact(); }},\n      { title: 'Cancel', action: (self) => { self.dismiss(); }},\n    ];\n\n    switch (this.type) {\n      case 'type_error':\n        if (this.title === '')  { this.title = 'Error'; }\n        break;\n      default:\n        this.type = 'type_info';\n        if (this.title === '')  { this.title = 'Information'; }\n        break;\n    }\n  }\n  dismiss() {\n    this.viewCtrl.dismiss();\n    this.dismissCallback(this.pageRef);\n  }\n  contact() {\n    if (this.newRoot) {\n      this.pageRef.nav.setRoot(this.newRoot)\n        .then ( () => {\n          this.pageRef.nav.push(AlertModalPage.contactPage, {from: 'Alert'});\n        });\n    }\n    else {\n      this.pageRef.nav.push(AlertModalPage.contactPage, {from: 'Alert'});\n    }\n\n    // override this\n    this.viewCtrl.dismiss();\n  }\n\n/**\n * Show a Modal alert popup\n * @param {string} type Defines default values for title, etc...\n *                      allowed values: 'type_error', 'type_info'\n * @param {string}    title\n * @param {string}    subTitle\n * @param {string}    body\n * @param {function}  cancelCallback\n * @param {any}       newRoot\n */\n  static show(context: any, config?: {type?: string, title?: string, subTitle?: string, body?: string, cancelCallback?: any, newRoot?: any, buttons?: Array<any> } ) {\n\n    var title           = config.title ? config.title : '';\n    var subTitle        = config.subTitle ? config.subTitle : '';\n    var body            = config.body ? config.body : '';\n    var dismissCallback = config.cancelCallback ? config.cancelCallback : (r) => { r.nav.pop(); };\n    var newRoot         = config.newRoot ? config.newRoot : null;\n    const self = this;\n\n    /* context.nav.present( Modal.create( AlertModalPage, {\n                                                       ref: context,\n                                                       type: config.type,\n                                                       title: title,\n                                                       subTitle: subTitle,\n                                                       bodyText: body,\n                                                       callbackFunction: dismissCallback,\n                                                       newRoot: newRoot\n                                                     })); */\n    if (!context.modalCtrl) console.error('Please make sure current context has a modalCtrl: ModalController member');\n\n    let newModal = context.modalCtrl.create( AlertModalPage, {\n                                                      ref: context,\n                                                      type: config.type,\n                                                      title: title,\n                                                      subTitle: subTitle,\n                                                      bodyText: body,\n                                                      callbackFunction: dismissCallback,\n                                                      newRoot: newRoot,\n                                                      buttons: config.buttons\n                                                    });\n    newModal.present();\n  }\n}"]}