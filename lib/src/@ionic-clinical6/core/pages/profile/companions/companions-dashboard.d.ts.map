{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/pages/profile/companions/companions-dashboard.d.ts"],"sourcesContent":["import { NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { ProfileService, CompanionModel } from '../profile.service';\nimport { UtilsService } from '../../../utils.service';\nexport declare class CompanionsDashboardPage {\n    utilsSvc: UtilsService;\n    profileSvc: ProfileService;\n    loadingController: LoadingController;\n    navParams: NavParams;\n    nav: NavController;\n    /** @param  {Array<CompanionModel>} companions - Parameter used to save/store Companions  */\n    companions: Array<CompanionModel>;\n    /** @param  {boolean} useOldApi  - Enables the fetch methods in order to use old v1/v2 apis */\n    useOldApi: boolean;\n    /** @param  {Object} page  - Default values for the page */\n    page: {\n        toolbar: string;\n        title: string;\n        image: any;\n        description: string;\n    };\n    constructor(utilsSvc: UtilsService, profileSvc: ProfileService, loadingController: LoadingController, navParams: NavParams, nav: NavController);\n    /**\n     * @async\n     * @function getCompanionsList - Get the Companions List\n    **/\n    getCompanionsList(): Promise<void>;\n    /**\n     * @async\n     * @function showCompanionProfile - Shows the companion profile\n    **/\n    showCompanionProfile(companion: any): Promise<void>;\n    /**\n     * @type {string} - Returns the Companion info about the first and the last name\n     **/\n    getTitle(companion: any): string;\n    /**\n     * @type {string} - Returns the Companion info about the first and the last name\n     **/\n    getSubtitle(companion: any): string;\n    /**\n     * @type {string} - Returns the Companion info about the relationship\n     **/\n    getInfo(companion: any): any;\n}\n"],"file":"companions-dashboard.d.ts"}