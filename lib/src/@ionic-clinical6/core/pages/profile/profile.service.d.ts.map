{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/pages/profile/profile.service.d.ts"],"sourcesContent":["export declare class ProfileService {\n    companionProfile: any;\n    patientProfile: any;\n    oldApi: boolean;\n    constructor();\n    /**\n     * @async\n     * @function getUserProfile - Get the profile of a user\n     * @param {boolean} useOldApi - Optional Parameter to use the sdk(v3 endpoint) or the fetch method(old api) to retrieve the profile info from the server\n     * @param {any} user - Optional Parameter to retrieve info about a specific user\n     * @return {Promise<any>}   - Promise object that returns one Profile\n     * @throws {Clinical6Error}  - If the Promise fails\n     **/\n    getUserProfile(useOldApi?: boolean, user?: any): Promise<any>;\n    /**\n     * @async\n     * @function getCompanionsList - Get the Companions list associated to a user\n     * @param {boolean} useOldApi - Optional Parameter to use the sdk(v3 endpoint) or the fetch method(old api) to retrieve the profile info from the server\n     * @return {Promise<any>}   - Promise object that returns the Companions list\n     * @throws {Clinical6Error}  - If the Promise fails\n     **/\n    getCompanionsList(useOldApi?: boolean): Promise<any>;\n    /**\n     * @async\n     * @function saveUserProfile - Save the User profile\n     * @param {boolean} useOldApi - Optional Parameter to use the sdk(v3 endpoint) or the fetch method(old api) to retrieve the profile info from the server\n     * @param {any} data - Profile attributes to save\n     * @throws {Clinical6Error}  - If the Promise fails\n     **/\n    saveUserProfile(useOldApi: boolean, data: any): Promise<any>;\n    setUserMode(): Promise<any>;\n}\n/**\n * @class CompanionModel - Extends the Companion model of the sdk to work properly also with old endpoint\n **/\nexport declare class CompanionModel {\n    /** @type {Number} - The RelatedUser ID value */\n    id: Number;\n    /** @type {String} - relationship value of RelatedUser */\n    relationship: String;\n    /** @type {String} - The type of the object */\n    type: String;\n    /** @type {Object} - Attributes of the RelatedUser */\n    attributes: Object;\n    constructor(response?: {});\n}\n"],"file":"profile.service.d.ts"}