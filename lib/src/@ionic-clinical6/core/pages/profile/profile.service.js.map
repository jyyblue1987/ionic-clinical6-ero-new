{"version":3,"sources":["../src/@ionic-clinical6/core/pages/profile/profile.service.ts"],"names":[],"mappings":"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","file":"profile.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { clinical6, mobileUserService } from 'clinical6';\nimport { Deserializer } from 'jsonapi-serializer';\n\n@Injectable()\nexport class ProfileService {\n\n    companionProfile;\n    patientProfile;\n    oldApi: boolean = true;\n\n    constructor(\n      ) {\n      }\n\n    /**\n     * @async \n     * @function getUserProfile - Get the profile of a user\n     * @param {boolean} useOldApi - Optional Parameter to use the sdk(v3 endpoint) or the fetch method(old api) to retrieve the profile info from the server\n     * @param {any} user - Optional Parameter to retrieve info about a specific user\n     * @return {Promise<any>}   - Promise object that returns one Profile\n     * @throws {Clinical6Error}  - If the Promise fails\n     **/\n    async getUserProfile(useOldApi: boolean = false, user: any = clinical6.user): Promise<any> {\n        try {\n            let profile;\n            if (useOldApi && this.oldApi) {\n                const response = await clinical6.fetch('/api/profile');\n                console.log('get user profile using \"/api/profile\": ', response.content);\n                profile = response.content;\n            } else {\n                const response = await mobileUserService.getProfile(user);\n                let data = JSON.parse(JSON.stringify(response));\n                console.log('get user profile using \"v3/mobile_users/{user_id}/profile\": ', data);\n                profile = data.attributes;\n            }\n            return profile;\n        } catch (e) {\n            throw(e);\n        }\n    }\n\n    /**\n     * @async \n     * @function getCompanionsList - Get the Companions list associated to a user\n     * @param {boolean} useOldApi - Optional Parameter to use the sdk(v3 endpoint) or the fetch method(old api) to retrieve the profile info from the server\n     * @return {Promise<any>}   - Promise object that returns the Companions list\n     * @throws {Clinical6Error}  - If the Promise fails\n     **/\n    async getCompanionsList(useOldApi: boolean = false): Promise<any> {\n        try {\n            let companions = [];\n            let response;\n            let temp;\n            if (useOldApi && this.oldApi) {\n                response = await clinical6.fetch('/api/related_mobile_users', 'GET');\n                temp = response.followers;\n                console.log('fetch Companion list using \"api/related_mobile_users\": ', response);\n            } else {\n                response = await clinical6.fetch(`/v3/mobile_users/${clinical6.user.id}/related_users?filter=followers`);\n                temp = await  new Deserializer().deserialize(response);\n                console.log('fetch Companion list using \"v3/mobile_users/{user.id}/related_users?filter=followers\": ', companions);\n            }\n            for (let comp of temp) {\n                companions.push(new CompanionModel(comp));\n            }\n            return companions;\n        } catch (e) {\n            throw(e);\n        }\n    }\n    \n    /**\n     * @async \n     * @function saveUserProfile - Save the User profile\n     * @param {boolean} useOldApi - Optional Parameter to use the sdk(v3 endpoint) or the fetch method(old api) to retrieve the profile info from the server\n     * @param {any} data - Profile attributes to save \n     * @throws {Clinical6Error}  - If the Promise fails\n     **/\n    async saveUserProfile(useOldApi: boolean = false, data: any) {\n        try {\n        let arrToObj = Object.assign({}, data.profileData)\n          if (useOldApi && this.oldApi) {\n            let response = await clinical6.fetch('/api/profile', 'PUT', arrToObj);\n            return Object.assign({}, data.profile, arrToObj);\n          } else {\n            const response = await mobileUserService.updateProfile({profile: arrToObj, user: data.user}); // v3 don't work\n            let parse = JSON.parse(JSON.stringify(response));\n            return parse.attributes;\n          }\n        } catch (e) {\n          throw(e);\n        }\n      }\n\n    async setUserMode() { // currently badges works correctly only on pompe platform\n        const loggedUser = clinical6.user;\n        const env = clinical6.apiBaseUrl;\n        try {\n            const role = await clinical6.fetch(`/api/user_role`);\n            if (role.user_role.permanent_link === 'companion') {\n                this.oldApi = false;\n                const tempId = clinical6.user.id;\n                let data = await clinical6.fetch('/v3/mobile_users/' + tempId + '/related_users?filter=following', 'GET');\n                console.log('fetchCompanions, data', data);\n                if (data.data[0].attributes.relationship) {\n                    const profile = await clinical6.user.getProfile()\n                    this.companionProfile = profile; // saving companion profile\n                    clinical6.user.id = data.data[0].attributes.followed_user_id;\n                    const _profile = await clinical6.user.getProfile()\n                    this.patientProfile = _profile; // saving patient profile\n                    return data.data[0].attributes.followed_user_id;\n                    }\n                else {\n                    const profile = await clinical6.user.getProfile()\n                    this.companionProfile = profile; // saving companion profile\n                    clinical6.user.id = data.data[1].attributes.followed_user_id;\n                    const _profile = await clinical6.user.getProfile()\n                    this.patientProfile = _profile; // saving patient profile\n                    return data.data[1].attributes.followed_user_id;\n                }\n            }\n            else {\n                this.companionProfile = null;\n                return;\n            }\n        \n        } catch (error) {\n            console.log('error setting user mode', error);\n        }\n    }\n}\n\n/**\n * @class CompanionModel - Extends the Companion model of the sdk to work properly also with old endpoint\n **/\nexport class CompanionModel {\n    /** @type {Number} - The RelatedUser ID value */\n    id: Number;\n    /** @type {String} - relationship value of RelatedUser */\n    relationship: String;\n    /** @type {String} - The type of the object */\n    type: String;\n    /** @type {Object} - Attributes of the RelatedUser */\n    attributes: Object;\n\n    constructor(response = {}) {\n        const _response = response['data'] || response; // if json api is passed in directly\n        const _attributes = _response['follower-user'] || _response; // if json api is passed in directly\n        const _type = _response['follower_user_type'] || 'mobile_users';\n        if (_attributes.id) {\n            /** @type {Number} */\n            this.id = parseInt(_attributes.id, 10);\n        }\n        if (_response.relationship) {\n            /** @type {String} */\n            this.relationship = _response.relationship;\n        }\n        if (_type) {\n            /** @type {String} */\n            this.type = _type === 'MobileUser' ? 'mobile_users' : _type;\n        }\n        /** @type {Object} */\n        this.attributes = _attributes;\n\n    }\n};\n"]}