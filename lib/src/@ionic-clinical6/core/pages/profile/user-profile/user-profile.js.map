{"version":3,"sources":["../src/@ionic-clinical6/core/pages/profile/user-profile/user-profile.ts"],"names":[],"mappings":"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","file":"user-profile.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, NavParams, Platform, LoadingController } from 'ionic-angular';\nimport { clinical6, User } from 'clinical6';\nimport { InputStyleUtil } from '../../../flow_process/flow_inputs/input.model';\nimport { PATIENT_PROFILE_FORM } from '../profile.mock';\nimport { TransferObject } from '@ionic-native/transfer';\nimport { Camera, Direction } from '@ionic-native/camera';\nimport { ActionSheetController } from 'ionic-angular';\nimport { ProfileService } from '../profile.service';\nimport { UtilsService } from '../../../utils.service';\n\n@Component({\n  selector: 'user-profile-page',\n  templateUrl: 'user-profile.html'\n})\nexport class UserProfilePage {\n  /** @param  {any} profile - Parameter to store the user's profile information  */\n  profile: any = {};\n  /** @param  {Object} step - Parameter used to get FlowStep information  */\n  step: Object = {};\n  /** @param  {Array<Object>} profileData - Parameter used to save/store the input values about the Profile  */\n  profileData = [];\n  /** @param  {boolean} editing    - Checks the form editing status */\n  editing: boolean = false;\n  /** @param  {boolean} formValid  - Checks if the form is valid */\n  formValid: boolean;\n  /** @param  {boolean} useOldApi  - Enables the fetch methods in order to use old v1/v2 apis */\n  useOldApi: boolean;\n  /** @param  {boolean} loading    - Forces the DOM view refresh */\n  loading: boolean = true;\n  /** @param  {boolean} imgLoading - Checks if the image/photo is loading */\n  imgLoading: boolean = true;\n  /** @param  {boolean} imgLoading - Shows a spinner if the image is loading */\n  showAvatar: boolean;\n  /** @param  {string} photo - Stores the user's photo selected from the gallery  */\n  photo: string;\n\n    constructor(\n      public utilsSvc: UtilsService,\n      public profileSvc: ProfileService,\n      public transferObject: TransferObject,\n      public camera: Camera,\n      public actionSheetCtrl: ActionSheetController,\n      public navParams: NavParams,\n      public nav: NavController,\n      public platform?: Platform) {\n\n    this.filter['excludeQuestion'] = true;\n    /** retrieve the nav parameters */\n    this.step = this.navParams.get('step') || PATIENT_PROFILE_FORM;\n    this.profile = this.navParams.get('profile') || null;\n    this.useOldApi = this.navParams.get('useOldApi') || false;\n    this.showAvatar = this.navParams.get('showAvatar') || false;\n    // maps the profile form with the correct info\n    this.getUserProfile();\n    // input-container setup\n    for (let inputState of this.step['inputs']) {\n      inputState.inputId = inputState.id;\n      inputState.inputTitle = inputState.title;\n      inputState.inputStyle = InputStyleUtil.getStyle(inputState.style);\n      inputState.inputChoices = inputState.choice_list;\n      for (let choiceState of inputState.inputChoices) {\n        choiceState.choiceId = choiceState.id;\n        choiceState.choiceBody = choiceState.body;\n        choiceState.choiceSelected = false;\n      }\n    }\n  }\n\n  /**\n   * @async \n   * @function getUserProfile - Maps all the profile attributes with the correct input\n  **/\n  async getUserProfile() {\n    this.utilsSvc.presentLoading('');\n    try {\n      if (!this.profile) {\n        this.profile = await this.profileSvc.getUserProfile(this.useOldApi, this.user)\n      }\n      clinical6.user.profile = this.profile;\n      this.photo = this.profileImg;\n      this.mapRemoteProfileData(this.step['inputs'], this.profile);\n    } catch (e) {\n      console.error(e);\n    }\n    this.utilsSvc.dismissLoader();\n    this.loading = false;\n  }\n  \n  /**\n   * @function mapRemoteProfileData - maps the profile form with the correct info\n   * @param {Array<any>} inputs - FlowStep inputs\n   * @param {any} profile - current profile object\n  **/\n  mapRemoteProfileData(inputs: Array<any>, profile: any) {\n    for (let input of inputs) {\n      switch (input.id) {\n        case 'street':\n        case 'city':\n        case 'state':\n        case 'zip_code':\n        case 'country':\n          this.profileData[input.id] = profile[input.id] || (profile['home_location'] ? profile['home_location'][input.id] : '');\n          break;\n        default:\n          this.profileData[input.id] = profile[input.id];\n      }\n    }\n  }\n\n  /**\n   * @callback updateControlValue - Updates the value if an input changes\n   * @param event\n  **/\n  updateControlValue(event) {\n    switch (event.id) {\n      case 'state':\n      case 'city':\n      case 'street':\n      case 'zip_code':\n      case 'country':\n        if (this.useOldApi) {\n          if (!this.profileData['home_location'])\n            this.profileData['home_location'] = {};\n          this.profileData['home_location'][event.id] = event.value;\n          this.profileData[event.id] =  event.value;\n          break;\n        }\n      default:\n        this.profileData[event.id] =  event.value;\n    }\n  }\n\n  /**\n   * @async\n   * @function saveUserProfile - Save the User Profile info\n   * @param event\n  **/\n  async saveUserProfile() {\n    this.utilsSvc.presentLoading('');\n    this.savePhoto();\n\n    try {\n      this.profile = await this.profileSvc.saveUserProfile(this.useOldApi, {profile: this.profile, user: this.user, profileData: this.profileData})\n      console.log('new user profile: ', this.profile);\n      clinical6.user.profile = this.profile;\n      this.nav.pop();\n    } catch (e) {\n      console.error(e);\n    }\n    this.utilsSvc.dismissLoader();\n  }\n\n  /**\n   * @type {User} - Returns the current user object\n  **/\n  get user(): User {\n    return this.navParams.get('user') || clinical6.user;\n  }\n\n  /**\n   * @type {Object} - Returns the filters for input-container\n  **/\n  get filter(): Object {\n    return {excludeQuestion: true};\n  }\n\n  /**\n   * @type {string} - Returns the user's image url\n  **/\n  get profileImg(): string {\n    return (this.profile.avatar && (this.profile.avatar.thumb ? this.profile.avatar.thumb.url: this.profile.avatar.url));\n  }\n\n  /**\n   * @callback doneEditingCallback - Callback to stop the form editing\n  **/\n  doneEditingCallback() {\n    this.editing = false;\n  }\n\n\n  /**\n   * @callback enterEditMode - Callback to start the form editing\n  **/\n  enterEditMode() {\n    this.editing = true;\n  }\n\n  /**\n   * @callback updateFormStatus - updates the status of the form\n   * @param {Boolean} value     - the status of the form \n  **/\n  updateFormStatus(value: boolean) {\n    this.formValid = value;\n  }\n\n  /**\n   * @callback actionDoneEdit - checks the form status\n  **/\n  actionDoneEdit() {\n    if (this.editing) return this.saveUserProfile();\n    else if (!this.editing) return this.enterEditMode();\n  }\n\n  /**\n   * @callback actionDoneEdit - This is to Handle the 'Go' button on the device Keyboard for iOS\n   * @param event\n  **/\n  handleGoButton(event: KeyboardEvent) {\n    if (this.platform && this.platform.is('ios')) {\n      if (event.keyCode === 13) {\n        this.doneEditingCallback();\n      }\n    }\n  }\n\n  /**\n   * @callback imgLoaded - Sets to false the imgLoading variable once the image has been loaded correctly\n  **/\n  imgLoaded() {\n    this.imgLoading = false;\n  }\n\n  /**\n   * @callback imgLoaded - Callback in case the image has not been loaded correctly\n  **/\n  imgError(event: any) {\n    console.log('image error called ', event);\n    this.imgLoaded();\n  }\n\n  /** HELPER METHODS TO MANAGE THE PHOTO UPLOAD  */\n\n  /**\n   * @async\n   * @function savePhoto - Add a new image to the User profile (this uses the PATCH method of the old profile api)\n   * @param event\n  **/\n  async savePhoto() {\n    let uri = clinical6.apiBaseUrl +  '/api/profile';\n    try {\n      let success = await this.transferObject.upload(this.photo, encodeURI(uri), {\n        fileKey: 'avatar',\n        httpMethod: 'PUT',\n        mimeType: 'image/jpeg',\n        headers: {'Authorization': `Token token=${clinical6.authToken}`}\n      });\n      console.log('file uploaded', success);\n    } catch (err) {\n      console.log('file upload failed');\n    }\n  }\n\n  /**\n   * @async\n   * @function takePhoto - Gets the picture from the gallery\n   * @param event\n  **/\n  async takePhoto() {\n    try {\n      let imageData = await this.camera.getPicture({\n        quality: 80,\n        targetWidth: 600,\n        targetHeight: 600,\n        encodingType: this.camera.EncodingType.JPEG,\n        mediaType: this.camera.MediaType.PICTURE,\n        destinationType: this.camera.DestinationType.DATA_URL,\n        cameraDirection: Direction.FRONT,\n        allowEdit: true\n      });\n      this.photo = 'data:image/jpeg;base64,' + imageData;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * @async\n   * @function openGallery - Opens the Device Gallery\n   * @param event\n  **/\n  async openGallery() {\n    try {\n      let imageData = await this.camera.getPicture({\n        quality: 80,\n        targetWidth: 600,\n        targetHeight: 600,\n        sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n        destinationType: this.camera.DestinationType.DATA_URL\n      });\n      this.photo = 'data:image/jpeg;base64,' + imageData;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * @function changePhoto - Shows the photo profile options if the form editng is not allowed \n  **/\n  changePhoto() {\n    if (!this.editing) return;\n    this.showPhotoProfileOptions();\n  }\n\n  /**\n   * @function showPhotoProfileOptions - Opens an action sheet with a title, subTitle, and an array of buttons\n  **/\n  showPhotoProfileOptions() {\n    let actionSheet = this.actionSheetCtrl.create({\n     title: 'Profile Photo',\n      buttons: [\n        {\n          text: 'Take a new Photo',\n          handler: () => {\n            this.takePhoto();\n          }\n        },\n        {\n          text: 'Choose from Gallery',\n          handler: () => {\n                this.openGallery();\n          }\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        }\n      ]\n   });\n\n   actionSheet.present();\n }\n\n}\n\n"]}