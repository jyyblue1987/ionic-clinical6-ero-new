{"version":3,"sources":["../src/@ionic-clinical6/core/pages/login-flow/custom-login-input/stepinput-login.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAwB,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAElD,OAAO,EAAE,sBAAsB,EAAE,MAAM,iEAAiE,CAAC;AACzG,4EAA4E;AAC5E,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAmD1C,IAAa,6BAA6B,GAA1C,mCAA2C,SAAQ,sBAAsB;IAIrE,YAAmB,SAAoB,EACpB,QAAkB,EAClB,UAAsB,EACtB,SAAmB;QAEtC,KAAK,EAAE,CAAC;QALW,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAAU;QAGtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAChG,CAAC;IAED,iJAAiJ;IACjJ,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,CAAC;IACH,CAAC;IAED,UAAU,CAAC,EAAW;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAC5E,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,MAAM,CAAC;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClD,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QAChI,CAAC;QACD,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;CAEF,CAAA;AApCY,6BAA6B;IAjDzC,SAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CT;KACF,CAAC;qCAMgC,SAAS;QACV,QAAQ;QACN,UAAU;QACX,QAAQ;GAP7B,6BAA6B,CAoCzC;SApCY,6BAA6B","file":"stepinput-login.js","sourcesContent":["import { Component, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { FormGroup } from '@angular/forms';\nimport { StepInputTextComponent } from '../../../flow_process/flow_inputs/text/stepinput-text.component';\n// import createNumberMask from 'text-mask-addons/dist/createNumberMask.js';\nimport { NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'custom-stepinput-login',\n  templateUrl: './stepinput-login.html'\n})\n\nexport class CustomStepInputLoginComponent extends StepInputTextComponent {\n\n    step: any;\n    link_button: any;\n    constructor(public navParams: NavParams,\n                public platform: Platform,\n                public elementRef: ElementRef,\n                public _keyboard: Keyboard\n                                            ) {\n    super();\n    this.step = this.navParams.data && this.navParams.data.step ? this.navParams.data.step : null;\n  }\n\n  /** Angular lifecycle callback to calculate the displayFormat, the pickerFormat, the minDate and the maxDate to use in the ion-datetime picker */\n  ngOnInit() {\n    super.ngOnInit();\n    this._keyboard.hideKeyboardAccessoryBar(false);\n    this.readOnly && (this.focusOut = this.readOnly);\n    let attribute = this.flowInput['attribute'];\n    if (attribute && attribute['link_button']) {\n      this.link_button = this.linkButton;\n    }\n  }\n\n  btnClicked(ev: UIEvent) {\n    this.goToPage.emit({id: this.flowInput.inputId, value: this.link_button});\n  }\n\n  get linkButton() {\n    let button;\n    if (this.step.paths && this.step.paths.length > 0) {\n      button = this.step.paths.filter(btn => (btn.button_name == this.flowInput['attribute']['link_button'] && btn.is_link_button));\n    }\n    return button && button[0];\n  }\n  \n}"]}