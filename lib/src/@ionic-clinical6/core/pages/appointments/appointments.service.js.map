{"version":3,"sources":["../src/@ionic-clinical6/core/pages/appointments/appointments.service.ts"],"names":[],"mappings":"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","file":"appointments.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { clinical6, ruleService, Client } from 'clinical6';\nimport * as moment from 'moment';\nimport { App, MenuController, LoadingController } from 'ionic-angular';\nimport { AppLoginService } from '../../login.service';\nimport { UtilsService } from '../../utils.service';\n\n@Injectable()\nexport class AppointmentsService {\n\n  /** @type {Array} monthAppointments - Local data structure for the month appointments  */\n  monthAppointments: Array<any>;\n  /** @type {Array} todayAppointments - Local data structure for the month appointments  */\n  todayAppointments: Array<any>;\n  /** appointments - Local data structure for the appointments  */\n  appointments;\n  /** reminderRules - Local data structure for the reminder rules  */\n  reminderRules = [];\n\n  constructor(\n              public app: App,\n              public loginSvc: AppLoginService,\n              public menu: MenuController,\n              public utilsSvc: UtilsService) {\n    this.monthAppointments = [];\n    this.appointments = {};\n  }\n\n  /**\n   * Retrieve all the reminder rules available on the platform.\n   */\n  async getReminderRules() {\n    try {\n      if (typeof this.reminderRules !== 'undefined' && this.reminderRules.length > 0) {\n        return this.reminderRules;\n      }\n      else {\n        let rules = await ruleService.get();\n        this.reminderRules = rules as any;\n        return this.reminderRules;\n      }\n    } catch (error) {\n      console.log('Error fetching the rules', error);\n    }\n  }\n\n  /**\n   * Retrieve a specific appointment.\n   * @param appointmentId The id of the appointment.\n   */\n  async getAppointment(appointmentId) {\n    try {\n      let data = await clinical6.fetch(`/v3/mobile_users/${clinical6.user.id}/reminder_events/${appointmentId}`);\n      let appointment = data.data;\n      appointment.attributes.date = moment.parseZone(moment(moment.utc(appointment.attributes.date).toDate()));\n      return appointment;\n    } catch (e) {\n      throw (e);\n    }\n  }\n\n  /**\n   * Retrieve all the appointments stored on the platform.\n   */\n  async getAppointments() {\n    this.utilsSvc.presentLoading();\n    try {\n      this.appointments = {};\n      let month_appointment = this.monthAppointments = [];\n      const rule = await this.reminderRules.find( (rule) => {\n        return rule.permanentLink === 'appointments';\n      });\n      let data = await clinical6.fetch(`/v3/mobile_users/${clinical6.user.id}/reminder_events?filters[rule_id]=${rule.id}`);\n      // let data = await clinical6.fetch(`/v3/mobile_users/${clinical6.user.id}/reminder_events?filters[rule_id]=2`);\n      if (data && data.data) {\n        month_appointment = data.data.sort((a, b) => {\n          return moment(a.attributes.date).diff(b.attributes.date);\n        });\n        console.log('appointments list: ', month_appointment);\n        month_appointment.forEach(appointment => {\n          // check if appointment is new\n          let status = this.status(appointment);\n          appointment.attributes.date = moment.parseZone(moment(moment.utc(appointment.attributes.date).toDate()));\n          if (status.value === 'new') {\n            this.addAppointment(appointment);\n          }\n          else if (status.value === 'updated') {\n            this.updateAppointment(appointment, status.index);\n          }\n        });\n      }\n      this.utilsSvc.dismissLoader();\n      return this.monthAppointments;\n    } catch (e) {\n      this.utilsSvc.dismissLoader();\n      console.log(e);\n    }\n\n  }\n\n  /**\n   * Retrive appointments for a specific date from platform.\n   * @param permanentLink The appointment's permanent link.\n   * @param date The selected date.\n   */\n  async getRemindersByDate(permanentLink, date) {\n    let events = await ruleService.getEventsByDate(permanentLink, date);\n    if (events.length > 0) {\n      let sortedEvents = events.sort((a, b) => {\n        return moment(b.date).diff(a.date);\n      });\n      return sortedEvents[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Retrieve appointments for a specific date from local data structure.\n   * @param date The selected date.\n   */\n  async getAppointmentsByDate(date) {\n    if (this.appointments && this.appointments[date])\n      return this.appointments[date];\n    else {\n      await this.getAppointments();\n      return this.appointments[date] || [];\n    }\n  }\n\n  /**\n   * Add an appointment to the local data structure.\n   * @param appointment The appointment data.\n   */\n  addAppointment(appointment) {\n    // let start = moment(appointment.date).toDate();\n    let date = moment(appointment.attributes.date).format('YYYY-MM-DD');\n    let start = moment(appointment.attributes.date).toDate();\n    let calEvent = {\n      start: start,\n      time: start, // time and start share the SAME value\n      upcoming_date: moment(appointment.attributes.date).format(),\n      color: {\n        primary: 'blue',\n        secondary: 'blue'\n      },\n      // title: appointment.extras.title,\n      // site: appointment.extras.site,\n      title: appointment.attributes.extras ? appointment.attributes.extras.title : '',\n      site: appointment.attributes.extras ? appointment.attributes.extras.site : '',\n      id: appointment.id,\n      // updated_at: moment(appointment.updated_at)\n      updated_at: moment(appointment.attributes.updated_at)\n    };\n    if (!this.appointments[date])\n      this.appointments[date] = [];\n    this.appointments[date].push(calEvent); // add in cache\n    this.monthAppointments.push(calEvent);\n  }\n\n  /**\n   * Update the appointment locally.\n   * @param appointment The selected appointment.\n   * @param index The local index of the appointment.\n   */\n  updateAppointment(appointment, index) {\n    var monthAppointments = this.monthAppointments[index];\n    if (monthAppointments.id !== appointment.id) {\n      console.error('updateAppointment, ids don\\'t match, something went wrong');\n      return;\n    }\n    // let start = moment(appointment.date).toDate();\n    let start = moment(appointment.attributes.date).toDate();\n    monthAppointments.start = start;\n    monthAppointments.time = start;\n    monthAppointments.upcoming_date = moment.parseZone(appointment.attributes.date);\n    // monthAppointments.title = appointment.extras.title;\n    // monthAppointments.site = appointment.extras.site;\n    monthAppointments.title = appointment.attributes.extras.title;\n    monthAppointments.site = appointment.attributes.extras.site;\n    // monthAppointments.updated_at = moment(appointment.updated_at);\n    monthAppointments.updated_at = moment(appointment.attributes.updated_at);\n  }\n\n  /**\n   * Save the appointment to the platform.\n   * @param appointment The new appointment.\n   */\n  async saveAppointment(appointment) {\n    let reminderRule = await this.reminderRules.find( (rule) => {\n      return rule.permanentLink === 'appointments';\n    });\n    console.log('ReminderService, save in', appointment);\n    // let start = moment(appointment.start);\n    // let time = moment(appointment.time);\n    // moment(moment(`${appointment.start}, ${appointment.time}`, 'YYYY-MM-DD, HH:mm').toISOString()).format();\n    let format = `${appointment.start}, ${appointment.time}`;\n    let date = moment(format, 'YYYY-MM-DD, HH:mm').toISOString(); // start.hour(time.hour()).minute(time.minute());\n\n    let event = {\n      model_name: 'MobileUser',\n      data: {\n        type: 'reminder__events',\n        attributes: {\n          date: date,\n          extras: {\n            'title': appointment.title || '',\n            'site': appointment.site || ''\n          }\n        },\n        relationships: {\n          mobile_users: {\n            data: {\n              type: 'mobile_users',\n              id: clinical6.user.id\n            }\n          },\n          reminder__rules: {\n            data: {\n              type: 'reminder__rules',\n              id: reminderRule.id\n            }\n          }\n        }\n      }\n    };\n    console.log('ReminderService, save out', event);\n    let rule = 'appointments';\n    let response;\n    try {\n      if ( appointment.id ) {\n          response = await clinical6.fetch(`/v3/mobile_users/${clinical6.user.id}/reminder_events/${appointment.id}`, 'PATCH', event);\n          let status = this.status(response.data);\n          if (status.index < 0) {\n            let msg = 'ReminderService, updateEvent error, could not find the index of the index of the appointment, something went wrong';\n            console.error(msg);\n            throw(msg);\n          }\n          else {\n            this.updateAppointment( response.data, status.index );\n            console.log('appointment successfully updated');\n            return response;\n          }\n      } else {\n        response = await clinical6.fetch(`/v3/mobile_users/${clinical6.user.id}/reminder_events`, 'POST', event);\n          console.log('ReminderService, insertEvent success', response);\n          // find the appointment\n          let status = this.status(response.data);\n          if (status.value !== 'new') {\n            let msg = 'ReminderService, insertEvent error, added a new appointment but it is not found as new, something went wrong';\n            console.error(msg);\n            return msg;\n          }\n          else {\n            this.addAppointment ( response.data );\n            console.log('appointment successfully created');\n            return response;\n          }\n        }\n    } catch (e) {\n      console.log(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Check the status of the appointment.\n   * @param appointment The selected appointment.\n   */\n  status(appointment) {\n    // for (let [index, monthAppointment] of this.monthAppointments.entries()) { // does not work in ts ...\n    for (let index = 0; index < this.monthAppointments.length; index++) {\n      let monthAppointment = this.monthAppointments[index];\n\n      if (monthAppointment.id === appointment.id) {\n        // appointment is already stored\n        // if ( monthAppointment.updated_at.isBefore(appointment.updated_at) ) {\n        if (monthAppointment.updated_at.isBefore(appointment.attributes.updated_at)) {\n          // stored appointment is outdated\n          // this.monthAppointments.splice(index, 1);\n          return { value: 'updated', index: index };\n        }\n        else\n          // appointment is already stored\n          return { value: 'existing', index: index };\n      }\n    }\n    // appointed is not stored\n    return { value: 'new', index: -1 };\n  }\n}\n\nexport const DATA = {\n  data:\n    [\n      {\n        'id': '15981',\n        'type': 'reminder__events',\n        'attributes': {\n          'date': '2018-04-24T13:50:00Z',\n          'status': 5,\n          'extras': {\n            'title': 'first ev',\n            'site': 'Apple-Review Site'\n          },\n          'created_at': '2018-04-24T13:50:00Z',\n          'updated_at': '2018-04-24T13:50:00Z'\n        },\n      },\n      {\n        'id': '15982',\n        'type': 'reminder__events',\n        'attributes': {\n          'date': '2018-04-24T15:50:00Z',\n          'status': 5,\n          'extras': {\n            'title': 'second ev',\n            'site': 'Apple-Review Site2'\n          },\n          'created_at': '2018-04-24T15:50:00Z',\n          'updated_at': '2018-04-24T15:50:00Z'\n        }\n      },\n      {\n        'id': '15983',\n        'type': 'reminder__events',\n        'attributes': {\n          'date': '2018-04-25T15:50:00Z',\n          'status': 5,\n          'extras': {\n            'title': 'third ev',\n            'site': 'Apple-Review Site2'\n          },\n          'created_at': '2018-04-25T15:50:00Z',\n          'updated_at': '2018-04-25T15:50:00Z'\n        }\n      },\n      {\n        'id': '15984',\n        'type': 'reminder__events',\n        'attributes': {\n          'date': '2018-04-25T15:50:00Z',\n          'status': 5,\n          'extras': {\n            'title': 'fourth ev',\n            'site': 'Apple-Review Site2'\n          },\n          'created_at': '2018-04-25T18:50:00Z',\n          'updated_at': '2018-04-25T18:50:00Z'\n        }\n      }\n    ]\n};"]}