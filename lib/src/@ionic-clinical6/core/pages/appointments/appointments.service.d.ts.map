{"version":3,"names":[],"mappings":"","sources":["src/@ionic-clinical6/core/pages/appointments/appointments.service.d.ts"],"sourcesContent":["import { App, MenuController } from 'ionic-angular';\nimport { AppLoginService } from '../../login.service';\nimport { UtilsService } from '../../utils.service';\nexport declare class AppointmentsService {\n    app: App;\n    loginSvc: AppLoginService;\n    menu: MenuController;\n    utilsSvc: UtilsService;\n    /** @type {Array} monthAppointments - Local data structure for the month appointments  */\n    monthAppointments: Array<any>;\n    /** @type {Array} todayAppointments - Local data structure for the month appointments  */\n    todayAppointments: Array<any>;\n    /** appointments - Local data structure for the appointments  */\n    appointments: any;\n    /** reminderRules - Local data structure for the reminder rules  */\n    reminderRules: any[];\n    constructor(app: App, loginSvc: AppLoginService, menu: MenuController, utilsSvc: UtilsService);\n    /**\n     * Retrieve all the reminder rules available on the platform.\n     */\n    getReminderRules(): Promise<any[]>;\n    /**\n     * Retrieve a specific appointment.\n     * @param appointmentId The id of the appointment.\n     */\n    getAppointment(appointmentId: any): Promise<any>;\n    /**\n     * Retrieve all the appointments stored on the platform.\n     */\n    getAppointments(): Promise<any[]>;\n    /**\n     * Retrive appointments for a specific date from platform.\n     * @param permanentLink The appointment's permanent link.\n     * @param date The selected date.\n     */\n    getRemindersByDate(permanentLink: any, date: any): Promise<any>;\n    /**\n     * Retrieve appointments for a specific date from local data structure.\n     * @param date The selected date.\n     */\n    getAppointmentsByDate(date: any): Promise<any>;\n    /**\n     * Add an appointment to the local data structure.\n     * @param appointment The appointment data.\n     */\n    addAppointment(appointment: any): void;\n    /**\n     * Update the appointment locally.\n     * @param appointment The selected appointment.\n     * @param index The local index of the appointment.\n     */\n    updateAppointment(appointment: any, index: any): void;\n    /**\n     * Save the appointment to the platform.\n     * @param appointment The new appointment.\n     */\n    saveAppointment(appointment: any): Promise<any>;\n    /**\n     * Check the status of the appointment.\n     * @param appointment The selected appointment.\n     */\n    status(appointment: any): {\n        value: string;\n        index: number;\n    };\n}\nexport declare const DATA: {\n    data: {\n        'id': string;\n        'type': string;\n        'attributes': {\n            'date': string;\n            'status': number;\n            'extras': {\n                'title': string;\n                'site': string;\n            };\n            'created_at': string;\n            'updated_at': string;\n        };\n    }[];\n};\n"],"file":"appointments.service.d.ts"}