{"version":3,"sources":["../src/@ionic-clinical6/core/pages/alerts/push.service.ts"],"names":[],"mappings":"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","file":"push.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Push, PushObject, NotificationEventResponse, RegistrationEventResponse } from '@ionic-native/push';\nimport { NavController, AlertController, Events, App } from 'ionic-angular';\nimport { clinical6, callbackService, Device, mobileUserService, Notification, Client } from 'clinical6';\nimport { Clinical6Service } from '../../clinical6.service';\nimport { TranslatorService } from '../../translator/translator.service';\nimport { AppConfig } from '../../config/app.config';\nimport { AlertsService } from './alerts.service';\nimport { AlertsFactory } from './alert.factory';\n\ndeclare var fabric;\n\n@Injectable()\nexport class PushService {\n\n  /** @param alerts Parameter to store the alerts  */\n  public alerts;\n\n  /** @param {PushObject} pushObject Parameter to store the push notification  */\n  pushObject: PushObject;\n\n  /** @param animationOpt  */\n  animationOpt;\n\n  constructor(\n    public alertCtrl: AlertController,\n    public push: Push,\n    public app: App,\n    public clinical6Service: Clinical6Service,\n    public translatorService: TranslatorService,\n    public alertsSvc: AlertsService\n    ) {\n      this.animationOpt = AppConfig.animationOpt;\n    }\n\n  /**\n   * Returns the current user Id.\n   */\n  private userId() {\n    return clinical6.user.id;\n  }\n\n  /**\n   * Initialize the alert service and enable the push notifications.\n   * @param {String} androidSenderId Sender ID is used by Android apps to register a physical device to be able to receive notifications from particular 3rd party server.\n   * @param config\n   */\n  init(androidSenderId, config: { android: any, ios: any, windows: any } = null) {\n    const defaults = {\n      android: {\n        senderID: androidSenderId, // Also configured in config.xml\n        icon: 'icon'\n      },\n      ios: {\n        alert: 'true',\n        badge: false,\n        sound: 'true'\n      },\n      windows: {}\n    };\n\n    config = {\n      ...defaults,\n      ...config\n    };\n\n    this.pushObject = this.push.init(config);\n\n    this.pushObject.on('registration').subscribe((data: RegistrationEventResponse) => {\n      let device = clinical6.device;\n      device.pushId = data.registrationId;\n      localStorage.setItem('device', JSON.stringify(clinical6.device));\n      console.log('device.pushId:', device.pushId);\n      if (device.accessToken && !clinical6.authToken) clinical6.authToken = device.accessToken;\n      device.save().catch((e) => { });\n    });\n\n    this.pushObject.on('notification').subscribe((data: NotificationEventResponse) => {\n      try {\n        let storage = localStorage.getItem('push') ? JSON.parse(localStorage.getItem('push')) : [];\n        storage.push(data);\n        localStorage.setItem('push', JSON.stringify(storage));\n        console.log('test push notifications: ', localStorage.getItem('push'));\n      } catch (e) {\n        console.log('test failed');\n      }\n      try {\n        let pushData = new PushNotification(data);\n        let callback;\n        if (pushData.title && pushData.message && pushData.action) {\n          callback = {\n            content: {\n              title: pushData.title,\n              message: pushData.message,\n              action: pushData.action,\n              action_object: pushData.jsonData.callback_id || pushData.jsonData.callback.action_object\n            }\n          }\n        }\n\n        let callbackId = this.getCallbackId(data.additionalData);\n\n        callbackService.getCallback(callbackId)\n          .then(callback => {\n            if (data.additionalData.foreground) {\n              this.showForegroundAlert(data, callback);\n            } else {\n              this.showBackGroundData(callback);\n            }\n          })\n          .catch(err => {\n            console.log(err)\n          });\n      } catch (err) {\n        // Failing to catch errors here seems to cause the plugin to stop receiving foreground notifications\n        console.error('Error processing push notification', err);\n      }\n    });\n\n    this.pushObject.on('error').subscribe((reason) => this.onError(reason));\n  }\n\n  /**\n   * Dysplay the foreground alert.\n   * @param data Callback data that comes from platform.\n   */\n  public showForegroundAlert(data, callback) {\n    this.onCallback(callback)\n      .then(alerts => this.showAlert(data, () => this.onGo(callback)))\n      .catch(e => alert(e));;\n  }\n\n  /**\n   * Controls the background data for a push.\n   * @param callback \n   */\n  public showBackGroundData(callback) {\n    const self = this;\n    let nav = this.app.getActiveNav();\n    let currview = nav && nav.getViews()[0] && nav.getViews()[0].name;\n    if (currview === AlertsFactory.DashboardPageName) {\n      this.onGo(callback);\n\n    } else {\n      nav.viewDidEnter.subscribe((view) => {\n        if (view.component.name === AlertsFactory.DashboardPageName) { // await the DashboardPage is entered before to push a new Page: this avoids the bug on the redirect to the Dashboard\n          self.onGo(callback);\n          nav.viewDidEnter.unsubscribe();\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the ios/android callback id.\n   * @param data Callback data that comes from platform.\n   */\n  public getCallbackId(data: NotificationEventResponse): number {\n    // Android and iOS push notifications from the platform have different data structures\n    return this.getIosCallbackId(data) || this.getAndroidCallbackId(data);\n  }\n\n  /**\n   * \n   * @param data Callback data that comes from platform.\n   */\n  public getAndroidCallbackId (data) {\n    return data && data.json && data.json.callback && data.json.callback.callback_id;\n  }\n\n  /**\n   * \n   * @param data Callback data that comes from platform.\n   */\n  public getIosCallbackId (data) {\n    return data && data.json && data.json.callback_id;\n  }\n\n  /**\n   * Shows the alert popup.\n   * @param notification Notification object with a title and a message.\n   * @param action Action sent by platform.\n   */\n  public showAlert(notification: {title?: string, message: string}, action: () => boolean | void = null) {\n    let alertText = this.getAlertText();\n    let buttons = action\n      ? [{ text: alertText.ignore, role: 'cancel' }, { text: alertText.go, handler: action }]\n      : [{ text: alertText.ok, role: 'cancel' }];\n\n    let confirmAlert = this.alertCtrl.create({\n      title: notification.title || alertText.defaultTitle,\n      message: notification.message,\n      buttons: buttons\n    });\n\n    confirmAlert.present();\n  }\n\n  /**\n   * Default text for the alert\n   */\n  public defaultAlertText = {\n    ignore: 'Dismiss',\n    go: 'Begin Now',\n    ok: 'Begin Now',\n    defaultTitle: 'Push Notification',\n    defaultMessage: 'New Notification'\n  };\n\n  /**\n   * Shows the text of the alert.\n   */\n  public getAlertText(): { ignore: string, go: string, ok: string, defaultTitle: string } {\n    return {\n      ignore: this.translatorService.getInnerHTML('ALERT_IGNORE') || this.defaultAlertText.ignore,\n      go: this.translatorService.getInnerHTML('ALERT_GO') || this.defaultAlertText.go,\n      ok: this.translatorService.getInnerHTML('ALERT_OK') || this.defaultAlertText.ok,\n      defaultTitle: this.translatorService.getInnerHTML('ALERT_TITLE') || this.defaultAlertText.defaultTitle\n    };\n  }\n\n  /**\n   * On Error - calls when an error occurs.  This is to be overwritten.\n   *\n   * @param {any} reason - Reason for error\n   */\n  onError(reason: any) {}\n\n  /**\n   * Refresh the app's alerts!\n   * @param callback \n   */\n  onCallback(callback: any): Promise<{}> {\n    return this.alertsSvc.getAlerts();\n  }\n\n  /**\n   * Used for managing the GO click on the alert popup.\n   * @param callback Callback data sent by platform.\n   */\n  onGo(callback: any): void {\n    // TODO: Somehow be aware of whether the user is past the PIN entry!\n    if (!clinical6.authToken) return;\n\n    let nav = this.app.getActiveNav();\n    if (!nav) return; // <-- Defensive!  Can this happen?\n    this.alertsSvc.goTakeAction(nav, callback.content);\n  }\n\n}\n\n\n/**\n * A model for a standard PushNotification\n */\nexport class PushNotification {\n  jsonData: any;\n  data: any;\n  title: 'Push Notification';\n  message: 'New Notification';\n  action: '';\n  buttons = [];\n  constructor(data) {\n    this.data = data || {};\n    this.jsonData = (data.additionalData && data.additionalData.json) || {};\n    this.title = this.getTitle();\n    this.message = this.getMessage();\n    this.action = this.getAction();\n  }\n  getTitle() {\n    return this.jsonData.title || this.data.title || this.title;\n  }\n  getMessage() {\n    return this.jsonData.message || this.jsonData.body || this.data.message || this.message;\n  }\n  getAction() {\n    return this.jsonData.action || (this.jsonData.callback && this.jsonData.callback.action);\n  }\n}"]}