{"version":3,"sources":["../src/@ionic-clinical6/core/pages/sign-up/login-email.ts"],"names":[],"mappings":"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","file":"login-email.js","sourcesContent":["import { Component } from '@angular/core';\n\nimport { ElementRef } from '@angular/core';\nimport { NavController, AlertController, NavParams, Platform, Loading, LoadingController } from 'ionic-angular';\nimport { BasePage } from '../base/base-page';\nimport { TranslatorService } from '../../translator/translator.service';\nimport { mobileUserService, flowService, userService, Client } from 'clinical6';\nimport { VerifyCodePage } from './login-verify-code';\nimport { LoginWithPinPage } from './../login-with-pin/login-with-pin';\nimport { Flows } from '../../flow_process/flow-factory';\nimport { AppConfig } from '../../config';\nimport { AppLoginService } from '../../login.service';\n\n@Component({\n  selector: 'enter-email-page',\n  templateUrl: 'login-email.html'\n})\nexport class EnterEmailPage extends BasePage {\n\n  /** @type {string} - Email input model */\n  email: string = '';\n\n  /** @type {boolean} - Enables/disables the ion-spinner if the email-form is not ready */\n  working: boolean = false;\n\n  /** @type {boolean} - Prevents the function is called more times in case of multiple click events */\n  isNavigating: boolean = false;\n\n  /** @type {Loading} - Shows a loading indicator  */\n  loader: Loading;\n\n  constructor(\n          public loadingController: LoadingController,\n          public loginSvc: AppLoginService,\n          public nav: NavController,\n          public translator: TranslatorService,\n          public alertCtrl: AlertController,\n          public params: NavParams,\n          public platform: Platform,\n          public el: ElementRef,\n          public navCtrl: NavController\n          ) {\n      super(platform, el, navCtrl);\n  }\n  goBack() {\n    this.nav.pop();\n  }\n  // add method instead of template function\n\n  /**\n   * This is called when the user clicks on \"LOGIN\" or equivalent action\n   */\n  async doneCallback() {\n\n    if (!this.isNavigating) {\n      this.loader = this.loadingController.create({\n        content: '',\n        dismissOnPageChange: true\n      });\n      this.loader.present();\n      this.isNavigating = true;\n      var attributes = {};\n      if (this.email.indexOf('@') > -1) {\n        attributes['email'] = this.email;\n      } else {\n        attributes['account_name'] = this.email;\n      }\n\n      /**\n       * TODO: Using fetch until the SDK is updated to return the response object instead of a plain string\n       */\n      try {\n        const response = await Client.instance.fetch('/v3/mobile_users/registration_validation', 'post', {\n          data: { type: 'registration_validations', attributes: attributes }\n        });\n        // mobileUserService.getRegistrationStatus(attributes)\n          this.isNavigating = false;\n          console.log('getRegistrationStatus: success', response);\n\n          // prepare the alert message\n          let alert = this.alertCtrl.create({\n            title: 'App Registration Error',\n            message: 'Unable to register the application. Please get in touch with your support contact, and try again.',\n            cssClass: 'pin-alert',\n            buttons: [\n              // {\n              //     text: 'OK',\n              //     handler: data => {\n              //       this.platform.exitApp();\n              //     }\n              // }\n            ]\n          });\n\n        let pageType = 'Verification';\n\n        // if (response === 'active') this.nav.push(VerifyCodePage,{ email: this.email });\n        // if (response !== 'new') this.nav.push(VerifyCodePage,{ email: this.email });\n        if (response.data.attributes.value === 'invalid') {\n          this.loader.dismiss(); \n          this.showInvaliEmailError();\n        };\n        if (response.data.attributes.value === 'disabled') {\n          this.loader.dismiss(); \n          this.showDisabledUserError();\n        };\n        if (response.data.attributes.value === 'active' || response.data.attributes.value === 'new')  {\n          if (response.meta.password_set === true) {\n            /**\n             * TODO: change this once the platoform is configured. this case should never apply\n             * and in case it does destination should be this.goToCodeVerificationPage();\n             * \n             */\n            console.warn('User has set his password already but it results as \"new\". Moving to enter PIN');\n            pageType = 'PIN';\n            }\n\n            // resetting the device data - TODO, maybe not necessary\n            this.loginSvc.resetDeviceInfo();\n            // authenticating the device\n            try {\n              const _response = await this.loginSvc.authenticateDevice();\n                console.log('Device Authentication Success ', response);\n\n                if (pageType === 'Verification')\n                  this.goToCodeVerificationPage();\n                else // i.e. if (pageType === 'PIN')\n                  this.goToEnterPINPage();\n            }\n            catch(err) {\n                this.loader.dismiss();              \n                console.error('Error Authenticating ', err);\n                alert.present();\n            }\n          }\n          // if (response === 'new') this.moveToNextFlow();\n        }\n        catch (error) {\n          this.isNavigating = false;\n          this.loader.dismiss();       \n          console.error('getRegistrationStatus: failure', error);\n        }\n    }\n  }\n\n  // moveToNextFlow() {\n  //   // Determine whether a PIN code already exists\n  //   this.loginSvc.verifyPinExists()\n  //   .then((existingPIN) => {\n  //       this.isNavigating = false;\n  //       if (existingPIN) {\n  //         this.goToEnterPINPage();\n  //       }\n  //       else {\n  //         this.goToCodeVerificationPage();\n  //       }\n  //   })\n  //   .catch( reason => {\n  //       this.isNavigating = false;\n  //       console.warn('Check if User PIN exists error: ', reason);\n  //       this.showError('Error', 'Unexpected Response from Server');\n  //   });\n  // }\n\n  goToCodeVerificationPage() {\n    this.nav.push(VerifyCodePage, { email: this.email }, AppConfig.animationOpt);\n  }\n\n  goToEnterPINPage() {\n    this.nav.push(LoginWithPinPage, { email: this.email }, AppConfig.animationOpt);\n  }\n\n  showInvaliEmailError() {\n    let alert = this.alertCtrl.create({\n      title: this.translator.getInnerHTML('POPUP_INVALID_EMAIL_TITLE') || 'Error',\n      message: this.translator.get('POPUP_INVALID_EMAIL_MESSAGE') || 'The entered Email is not valid. Please verify and try again.',\n      cssClass: 'email-alert',\n      buttons: [\n        {\n          text: this.translator.getInnerHTML('POPUP_OK') || 'OK',\n          handler: data => {\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  showDisabledUserError() {\n    let alert = this.alertCtrl.create ({\n        title: 'Account Disabled',\n        message: 'Your account has been disabled. Please contact your System Administrator.',\n        cssClass: 'email-alert',\n        buttons: [\n          {\n              text: this.translator.getInnerHTML('POPUP_OK') || 'OK',\n              handler: data => {\n              }\n          }\n        ]\n      });\n    alert.present();\n  }\n\n  handleKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.doneCallback();\n    }\n  }\n  showError(title: string = 'Error', errorText: string) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: errorText,\n      cssClass: 'email-alert',\n      buttons: [\n        {\n          text: this.translator.getInnerHTML('POPUP_OK') || 'OK',\n          handler: data => {\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n}"]}