{"version":3,"sources":["../src/@ionic-clinical6/core/pages/about/about.ts"],"names":[],"mappings":"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","file":"about.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { ViewController, AlertController } from 'ionic-angular';\n\nimport { DomSanitizer, SafeHtml, SafeUrl} from '@angular/platform-browser';\nimport { Clinical6Service } from '../../clinical6.service';\nimport { AppConfig } from '../../config';\nimport { PlainPage }  from '../plain/plain-page';\nimport { TranslatorService } from '../../translator/translator.service';\n\n@Component({\n  selector: 'about-page',\n  templateUrl: 'about.html'\n})\nexport class AboutPage extends PlainPage {\n    image: any;\n    title: string;\n    _body: string;\n    imageUrl: string;\n    offlineContent: boolean;\n    permLink: string;\n    isLoading: boolean;\n    imgLoaded: boolean = false;\n    backgrImage: SafeUrl;\n\n    constructor(\n      public translator: TranslatorService,\n      public appConfig: AppConfig,\n      public c6Service: Clinical6Service,\n      public nav: NavController,\n      public navParams: NavParams,\n      public viewCtrl: ViewController,\n      public alertCtrl: AlertController,\n      public _sanitizer: DomSanitizer) {\n        super (translator, appConfig, c6Service, nav, navParams, viewCtrl, alertCtrl, _sanitizer);\n\n        if (navParams.get('page')) {\n          this.image = navParams.get('page').image;\n        }\n\n        if (this.image && this.image.url) {\n          this.imageUrl = this.image.url;\n        }\n        else\n          this.imageUrl = this.image && this.image.image && this.image.image.main && this.image.image.main.url;\n    }\n\n    parseRemoteContents() {\n      super.parseRemoteContents();\n      var contents = this.appConfig[this.permLink];\n\n      if (contents['image'] && contents['image']['url']) {\n        this.imageUrl = contents['image']['url'];\n        this.backgrImage = this._sanitizer.bypassSecurityTrustStyle('url(\"' + this.imageUrl + '\")');        \n      }\n      else if(contents['imageUrl']) {\n        this.imageUrl = contents['imageUrl'];\n        this.backgrImage = this._sanitizer.bypassSecurityTrustStyle('url(\"' + this.imageUrl + '\")');                \n      }\n\n    }\n\n    imageLoaded() {\n      this.imgLoaded = true;\n    }\n}"]}