{"version":3,"sources":["../src/@ionic-clinical6/core/pages/login-with-pin/login-with-pin.ts"],"names":[],"mappings":"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","file":"login-with-pin.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { Modal, NavController, ModalController, AlertController, NavParams, Platform } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { clinical6, flowService, User, userService, mobileUserService, Device } from 'clinical6';\nimport { Clinical6Service } from '../../clinical6.service';\nimport { ValidationService } from '../../flow_process/flow_inputs/validation.service';\nimport { Flows } from '../../flow_process/flow-factory';\nimport { HelpModalPage } from '../../modal/help-modal';\nimport { AppConfig, AppState } from '../../config';\nimport { TranslatorService } from '../../translator/translator.service';\nimport { AppLoginService } from '../../login.service';\nimport { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions';\nimport { AlertModalPage } from '../../modal/alert-modal';\n\n\n@Component({\n  selector: 'login-with-pin-page',\n  templateUrl: 'login-with-pin.html',\n})\nexport class LoginWithPinPage {\n\n  authForm: FormGroup;\n  // variables for two-way data binding with NgModel\n  pin = '';\n  email = '';\n  code = '';\n  newPin = '';\n  newPinConfirm = '';\n  // conditional variables to pass on the following pages\n  showPinPage = true;\n  showEmailPage = false;\n  showForgotPasswordPage = false;\n  showActivationCodePage = false;\n  showResetPinPage = false;\n  // Prevents the function is called more times in case of multiple click events \n  isNavigating = false;\n  focusOut = false;\n  // shows the 'Reset passowrd pop-up after entering wrong PIN 3 times\n  countAlert = 1;\n  failedLogins: number = 0;\n  // skips the Activation Code page\n  skipActivationCode = false;\n  _title: string = '';\n  _resetPINText: string = '';\n  // uses native hardware acceleration to animate your transitions between views\n  backTransition: NativeTransitionOptions = {\n    direction: 'right',\n    // duration: 500,\n    // slowdownfactor: 3,\n    // slidePixels: 20,\n    // iosdelay: 100,\n    // androiddelay: 150,\n    // fixedPixelsTop: 0,\n    // fixedPixelsBottom: 60\n   };\n   nextTransition: NativeTransitionOptions;\n   // enables/disables the back button in the toolbar\n   showBackButton: boolean;\n   \n  constructor(\n    public appConfig: AppConfig,\n    public loginSvc: AppLoginService,\n    public translatorService: TranslatorService,\n    public nav: NavController,\n    public navParams: NavParams,\n    public captiveReach: Clinical6Service,\n    public modalCtrl: ModalController,\n    public alertCtrl: AlertController,\n    public formBuilder: FormBuilder,\n    public keyboard: Keyboard,\n    public platform: Platform,\n    public nativePageTransitions: NativePageTransitions) {\n\n    this.authForm = formBuilder.group({\n      'newPin': ['', Validators.compose([Validators.required])],\n      'newPinConfirm': ['', Validators.compose([Validators.required])],\n      'email': ['', Validators.compose([Validators.required, ValidationService.emailValidator])]\n    }, { validator: ValidationService.matchPasswords('newPin', 'newPinConfirm') });\n  }\n\n  ngOnInit() {\n    this.keyboard.hideKeyboardAccessoryBar(false);\n    if (this.navParams.get('resetPin')) {\n      this.showPinPage = false;\n      this.showEmailPage = true;\n      this.showActivationCodePage = false;\n      this.showForgotPasswordPage = false;\n      this.showResetPinPage = false;\n      this.resetPin();\n    }\n    let conditionsValid = true;\n    // set the device in case the device has not been already set  and if that is present in the localstorare\n    if (localStorage.getItem('device'))\n      clinical6.device = new Device(JSON.parse(localStorage.getItem('device')));\n    else\n      conditionsValid = false;\n\n    if (localStorage.getItem('user'))\n      clinical6.user = new User(JSON.parse(localStorage.getItem('user')));\n    else\n      conditionsValid = false;\n\n    if (!conditionsValid) {\n      console.error('Entering the PIN page without a valid device and user info');\n      this.showAlert('Application error', 'Something went wrong, please reinstall your app.')\n    }\n  }\n\n  ionWillEnter() {\n    this.isNavigating = false;\n  }\n\n  // This can make the login to the fourth PIN (It replaces the button): Remember that the PIN is 6 digits!\n  keyboardPin(event: KeyboardEvent) {\n    if (this.showPinPage && this.pin.length === 6 && event.keyCode !== 8) {\n      // this.login();\n      // this.keyboard.close();\n    }\n    else if (this.showActivationCodePage && this.code.length === 6 && event.keyCode !== 8) {\n      // this.activation();\n      // this.keyboard.close();\n    }\n  }\n  get title() {\n    return this._title;\n  }\n\n  set title(text: string) {\n    this._title = text;\n  }\n\n  get resetPINText() {\n    return this._resetPINText;\n  }\n\n  set resetPINText(text: string) {\n    this._resetPINText = text;\n  }\n\n  goBackPop() {\n      this.nav.pop();\n  }\n\n  // simulates the ios-next transition of the NavController\n  async goNext() {\n    try {\n      let response = await this.nativePageTransitions.slide(this.nextTransition);\n      return response;     \n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n    // if (!this.platform.is('core')) {\n    //   return await this.nativePageTransitions.slide(this.nextTransition)\n    // } else \n    //   return;\n  }\n\n  // uses the ionic NativePageTransitions component to simulate the ios-back transition of the NavController\n  async goBackTransition() {\n    try {\n      return await this.nativePageTransitions.slide(this.backTransition)      \n    } catch (e) {\n      console.log(e);\n      return;\n    }\n  }\n\n  // uses the goBackTransition function to create navigation experience between views\n  async goBack() {   \n    if (this.showPinPage) {\n      if (this.nav.first().name === 'VerifyEmailPage') {\n        this.goBackPop();\n        this.loginSvc.clearAuthInfo();      \n      }\n    } else {\n      await this.goBackTransition();\n      if (this.showEmailPage) {\n        this.showEmailPage = false;\n        if (this.nav.first().name !== 'VerifyEmailPage')\n          this.showBackButton = false;\n        this.showPinPage = true;\n      } else if (this.showForgotPasswordPage) {\n        this.email = '';\n        this.showForgotPasswordPage = false;\n        this.showEmailPage = true;      \n      }\n      else if (this.showActivationCodePage) {\n        this.showActivationCodePage = false;\n        this.showForgotPasswordPage = true;\n      } else if (this.showResetPinPage) {\n        this.showResetPinPage = false;      \n        if (!this.skipActivationCode) \n          this.showActivationCodePage = true;\n        else \n          this.showForgotPasswordPage = true;\n      }\n    }\n  }\n\n  // This checks the pin otherwise launches an alert\n  // (to be overridden by derived class)\n  async login() {\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n\n      if (this.appConfig.useLegacyV2APIs) {\n        // ...\n      }\n      else {\n        if ( !clinical6.user.email && !clinical6.user.accountName && localStorage.getItem('user') ) {\n          clinical6.user = new User(JSON.parse(localStorage.getItem('user')));\n        }\n        localStorage.setItem('user', JSON.stringify(clinical6.user));\n        try {\n          let result = await this.loginSvc.authenticateUser(clinical6.user.email || clinical6.user.accountName, this.pin);\n          console.log('User Login Success', result);\n          await this.loginSuccess();\n          this.showBackButton = true;          \n          this.isNavigating = false;\n          return true;\n        }\n        catch (failure) {\n          this.failedLogins++;\n          console.log('Sign in error: ' + failure);\n          this.isNavigating = false;\n          if (this.failedLogins >= 3) this.resetPin();\n          else {\n            // TODO so far the reason has no human meaning\n            // this.showAlert('Login Error', reason._response.message);\n            this.showLoginError();\n            this.pin = '';\n          }\n          return false;\n        }\n      }\n    }\n  }\n\n  showLoginError() {\n    this.showAlert(\n      this.translate('PIN_ENTER_INVALID_TITLE') || 'Invalid PIN',\n      this.translate('PIN_ENTER_INVALID_MSG') || 'Please check your credentials and try again'\n    );\n  }\n\n  // This is to be overridden with the next page/flow after resetting pin/password\n  passwordResetSuccess() {\n\n  }\n\n  // This is to be overridden with the next page/flow after resetting pin/password\n  async loginSuccess() {\n  }\n\n  // This reset the pin after the third PIN error\n  async resetPin() {\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n      this.showBackButton = true;\n      let alert = this.alertCtrl.create ({\n        title: this.translate('IFORGOT_POPUP_TITLE') || 'Reset Password',\n        message: this.translate('IFORGOT_POPUP_MSG') || 'Would you like to reset <br>your 6 digit Password?',\n        cssClass: 'pin-alert',\n        buttons: [\n          {\n            text: this.translate('POPUP_CANCEL') || 'Cancel',\n            handler: data => {\n              // this.nav.pop();\n            }\n          },\n          {\n              text: this.translate('POPUP_YES') || 'Yes',\n              handler: data => {\n                  this.countAlert = 1;\n                  this.goNext();\n                  this.showBackButton = true;\n                  this.showPinPage = false;\n                  this.showEmailPage = true;\n                  this.showActivationCodePage = false;\n                  this.showForgotPasswordPage = false;\n                  this.showResetPinPage = false;\n              }\n          }\n        ]\n      });\n      alert.present();\n      this.isNavigating = false;\n    }\n  }\n\n  // This sends the activation code to the email or throws an alert error if the email is not valid\n  async send() {\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n      const self = this;\n      if (this.appConfig.useLegacyV2APIs) {\n        try {\n          let response = await clinical6['emailPassword'].call(this, this.email)          \n          console.log('Valid Email: ', response);\n          await this.goNext();     \n          this.showBackButton = true;          \n          this.showEmailPage = false;\n          this.showForgotPasswordPage = true;\n          self.isNavigating = false;\n        } catch (reason) {\n          self.isNavigating = false;\n          console.log('Invalid Email error: ' + reason.message);\n          this.showAlert(\n            this.translate('IFORGOT_ERROR_INVALID_EMAIL_TITLE') || 'Invalid Email',\n            this.translate('IFORGOT_ERROR_INVALID_EMAIL_MSG') || 'We cannot find your email address in the system. Please re-enter your email address.'); \n          this.showEmailPage = true;\n          this.showBackButton = true;          \n        }\n        // clinical6['emailPassword'].call(this, this.email)\n        //   .then( response => {\n        //     console.log('Valid Email: ', response);\n        //     await this.goNext();            \n        //     this.showEmailPage = false;\n        //     this.showForgotPasswordPage = true;\n        //     self.isNavigating = false;\n        //   })\n        //   .catch( reason => {\n        //     self.isNavigating = false;\n        //     console.log('Invalid Email error: ' + reason.message);\n        //     this.showAlert(\n        //       this.translate('IFORGOT_ERROR_INVALID_EMAIL_TITLE') || 'Invalid Email',\n        //       this.translate('IFORGOT_ERROR_INVALID_EMAIL_MSG') || 'We cannot find your email address in the system. Please re-enter your email address.'); \n        //     this.showEmailPage = true;\n        // });\n      }\n      else {\n        try {\n          let response = await mobileUserService.requestPasswordReset({ email: this.email })\n          // .then( response => {\n          console.log('Valid Email: ', response);\n          await this.goNext();\n          this.showBackButton = true;          \n          this.showEmailPage = false;\n          this.showForgotPasswordPage = true;\n          self.isNavigating = false;\n\n        } catch(reason) {\n            self.isNavigating = false;\n            console.log('Invalid Email error: ' + reason.message);\n            this.showAlert(\n              this.translate('IFORGOT_ERROR_INVALID_EMAIL_TITLE') || 'Invalid Email',\n              this.translate('IFORGOT_ERROR_INVALID_EMAIL_MSG') || 'We cannot find your email address in the system. Please re-enter your email address.');\n            this.showEmailPage = true;\n            this.showBackButton = true;            \n        }\n      }\n    }\n  }\n\n    // This goes on the activation code page\n  async continue() {\n    await this.goNext();    \n    this.showBackButton = true;    \n    this.showForgotPasswordPage = false;    \n    this.failedLogins = 0;   \n    this.isNavigating = false;  \n    if (!this.skipActivationCode) {\n      this.showActivationCodePage = true;\n    } else {\n      this.showResetPinPage = true;\n    }  \n  }\n\n  // This checks the activation code otherwise launches an alert\n  async activation() {\n    if (!this.isNavigating) {\n    this.isNavigating = true;\n    if (this.appConfig.useLegacyV2APIs) {\n\n      if (this.code === '') this.code = ' '; // Needed otherwise a guest sign in will be triggered\n      try {\n        let response = await clinical6['signIn'].call(this, this.email, this.code)\n        // .then( response => {\n        console.log('Valid Activation Code: ', response);\n        await this.goNext();              \n        this.showActivationCodePage = false;\n        this.showResetPinPage = true;\n        this.isNavigating = false;\n        this.showBackButton = true;        \n      } catch (reason) {\n          this.isNavigating = false;\n          console.log('Invalid Activation Code: ' + reason.message);\n          this.showAlert(\n              this.translate('IFORGOT_ERROR_ACTIVATION_CODE_TITLE') || 'Invalid Activation Code',\n              this.translate('IFORGOT_ERROR_ACTIVATION_CODE_MSG') || 'An invalid activation code has been entered. Please try again.');\n          this.showActivationCodePage = true;\n          this.showBackButton = true;          \n      }\n    } else {\n        // just move to next screen\n        await this.goNext();            \n        this.showActivationCodePage = false;\n        this.showResetPinPage = true;\n        this.isNavigating = false;\n        this.showBackButton = true;        \n      }\n    }\n  }\n\n  // This inserts the new pin and goes on next page otherwise throws an alert error\n  async submit() {\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n      const self = this;\n      if (this.failedLogins < 2 || !this.skipActivationCode) {\n          \n        if (this.appConfig.useLegacyV2APIs) {\n          try {\n            let response = await clinical6['resetPassword'].call(this, this.newPin, this.newPinConfirm, this.code)\n            // .then (response => {\n            console.log('Reset Pin completed successfully: ', response);\n            await this.goNext();                  \n            this.showResetPinPage = false;\n            this.passwordResetSuccess();\n            this.isNavigating = false;\n            this.showBackButton = true;\n            \n          } catch (reason) {\n            this.isNavigating = false;\n            let err_title = this.translate('IFORGOT_ERROR_RESET_PIN_TITLE') || 'Reset Failed';\n            console.log(err_title + ': ', reason.message);\n            this.showAlert(err_title, reason.message);\n            this.newPin = this.newPinConfirm = '';\n            this.showResetPinPage = true;\n            this.showBackButton = true;\n            \n          }\n        }\n        else {\n          /**\n           * V3 APIS\n           */\n          if (this.authForm.hasError('mismatchedPasswords')) {\n            this.showAlert(\n              this.translate('IFORGOT_ERROR_PASSWORDS_MISMATCH_TITLE') || 'PIN codes Mismatch',\n              this.translate('IFORGOT_ERROR_PASSWORDS_MISMATCH_MSG') || 'PIN codes do not match, please verify your input.');\n                  this.showBackButton = true;\n            this.showResetPinPage = true;\n            this.isNavigating = false;\n            this.failedLogins++;\n            return;\n          }\n          this.loginSvc.clearAuthInfo();\n          try {\n\n            let response = await this.loginSvc.authenticateDevice()\n            // .then ( response => {\n            const attributes = { \n              reset_password_token: this.code, \n              password: this.newPin\n            };\n            try {\n              let user = await mobileUserService.resetPassword(attributes)\n              // .then( user => {\n              console.log('Password Change Successful: ', user);\n              // this.showResetPinPage = false;\n              // Now only reset on email is possible\n              if (!clinical6.user.email || !clinical6.user.accountName)\n                clinical6.user = user && (user.email || user.accountName) ? user : clinical6.user; // make sure that clinical6.user points the correct user instance\n              localStorage.setItem('user', JSON.stringify(clinical6.user));\n              let result = await this.loginSvc.authenticateUser(clinical6.user.email || clinical6.user.accountName, this.newPin);\n              console.log('User Login Success', result);\n              this.loginSuccess();\n              this.isNavigating = false;\n          // })\n            } catch (reason) {\n              this.isNavigating = false;\n              console.log('Password Change Failed: ' + reason.message);\n              this.showAlert(\n                  this.translate('IFORGOT_ERROR_ACTIVATION_CODE_TITLE') || 'Invalid Activation Code',\n                  this.translate('IFORGOT_ERROR_ACTIVATION_CODE_MSG') || 'An invalid activation code has been entered. Please try again.');\n              this.code = this.newPin = this.newPinConfirm = '';\n              // this.showResetPinPage = false;\n              if (!this.skipActivationCode) {\n                await this.goBackTransition();\n                this.showResetPinPage = false;\n                this.showActivationCodePage = true;\n              }\n            }\n          } catch(err) {\n            this.isNavigating = false;\n            console.error('Error Authenticating ', err);\n            this.showAlert(\n                'Device Registration Error',\n                'Unable to Reset Password. Please get in touch with your support contact, and try again.');\n            this.code = this.newPin = this.newPinConfirm = '';\n            if (!this.skipActivationCode) {\n              await this.goBackTransition();                \n              this.showResetPinPage = false;\n              this.showActivationCodePage = true;\n            }\n          }\n        }\n      } \n      else {\n        let alert_data = { \n          title: this.translate('CREATE_PIN_ENTER_INVALID_TITLE') || 'Device Registration Error', \n          message: this.translate('CREATE_PIN_ENTER_INVALID_MSG') || 'Unable to Reset Password. Please get in touch with your support contact, and try again.',\n          case: 'no_email_page'\n        };\n        if (this.nav.first().name === 'VerifyEmailPage')\n          alert_data.case = 'email_page';\n        this.showCreatePinError(alert_data);\n      }\n    }\n  }\n\n  showCreatePinError(data) {\n    let alert = this.alertCtrl.create({\n      title: data.title,\n      message: data.message,\n      cssClass: 'pin-alert',\n      buttons: [\n        {\n            text: this.translate('POPUP_OK') || 'OK',\n            handler: response => {\n                switch (data.case) {\n                    case 'email_page':\n                      this.loginSvc.clearAuthInfo();      \n                      this.nav.pop(AppConfig.animationOptBack)\n                      break;\n                    default:\n                      this.goToEmailPage();\n\n                }\n            }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  async goToEmailPage() {   // return to the EmailPage in case the access code is not received\n    await this.goBackTransition();    \n    this.showActivationCodePage = false;\n    this.showEmailPage = true;\n    this.showResetPinPage = false;\n    this.isNavigating = false;\n    this.focusOut = false;\n    this.failedLogins = 0;\n    this.email = this.code = this.newPin = this.newPinConfirm = '';\n  }\n\n  showAlert(title: string, message: string) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: message,\n      cssClass: 'pin-alert',\n      buttons: [\n        {\n          text: this.translate('POPUP_OK') || 'OK',\n          handler: data => {\n            switch (title) {\n              case 'Invalid PIN':\n                this.showPinPage = true;\n                break;\n            }\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  showError(errorSubTitle: string, errorText: string) {\n    const title = 'Error';\n    // using the Help Modal for the time being, later on to be reskinned\n    let modal = this.modalCtrl.create(HelpModalPage, { title: title, subTitle: errorSubTitle, helpText: errorText }, { showBackdrop: true });\n    modal.present();\n  }\n\n  translate(string_key: any) {\n    let str = this.translatorService.getInnerHTML(string_key);\n    if (str === '') str = null;\n    return str;\n  }\n}\n"]}