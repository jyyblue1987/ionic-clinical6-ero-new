{"version":3,"sources":["../src/@ionic-clinical6/core/pages/admins/create-new-user.ts"],"names":[],"mappings":"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","file":"create-new-user.js","sourcesContent":["import { Component } from '@angular/core';\n\nimport { ElementRef } from '@angular/core';\nimport { NavController, AlertController, NavParams, Platform } from 'ionic-angular';\nimport { BasePage } from '../base/base-page';\nimport { TranslatorService } from '../../translator/translator.service';\nimport { mobileUserService, flowService, userService, clinical6, Client } from 'clinical6';\nimport { AppConfig } from '../../config';\nimport { AppLoginService } from '../../login.service';\n\n@Component({\n  selector: 'create-new-user',\n  templateUrl: 'create-new-user.html'\n})\nexport class CreateNewUserPage extends BasePage {\n\n  email: string = '';\n  pin: string = '';\n  account_name: string = '';\n  working: boolean = false;\n  isNavigating: boolean = false;\n  constructor(\n          public loginSvc: AppLoginService,\n          public nav: NavController,\n          public alertCtrl: AlertController,\n          public params: NavParams,\n          public platform: Platform,\n          public el: ElementRef,\n          public navCtrl: NavController,\n          private translator: TranslatorService,\n          ) {\n      super(platform, el, navCtrl);\n  }\n\n\n  /**\n   * This is called when the user clicks on \"LOGIN\" or equivalent action\n   */\n  doneCallback() {\n\n    if (!this.isNavigating) {\n      this.isNavigating = true;\n\n      this.loginSvc.clearAuthInfo();\n      this.loginSvc.authenticateDevice()\n      .then(() => {\n\n        var attrs = {};\n        if (this.email) attrs['email'] = this.email;\n        if (this.pin) attrs['password'] = this.pin;\n        if (this.account_name) attrs['account_name'] = this.account_name;\n\n      const url = `/v3/mobile_users/registrations`;\n      const data = {\n          'type': 'mobile_users',\n          'attributes': attrs,\n          'relationships': {\n            'devices': {\n              'data': {\n                'type': 'devices',\n                'id': Client.instance.device.id\n              }\n            }\n          }\n        };\n\n      mobileUserService.register(attrs, Client.instance.device)\n        .then((result) => {\n          this.isNavigating = false;\n\n          var buttons = [{\n                  text: this.translator.getInnerHTML('POPUP_OK') || 'OK',\n                  handler: data => {\n\n                    this.nav.pop();\n\n                  }\n              }\n            ];\n          if (!this.pin && this.email) {\n            buttons.push({\n                  text: 'Send Confirmation Email',\n                  handler: data => {\n                    mobileUserService.sendConfirmation(this.email).then(() => {\n                        this.showAlert('Success', 'User Created and email sent');\n                    }).catch ((result) => {\n                        this.showAlert('Error', 'User Created but email not sent:' + result.message);\n                    });\n                  }\n            });\n          }\n\n          let alert = this.alertCtrl.create ({\n            title: 'Success',\n            message: 'User Successfully created',\n            cssClass: 'code-alert',\n            buttons: buttons\n          });\n          alert.present();\n        })\n        .catch((result) => {\n          this.isNavigating = false;\n          this.showAlert('Error', 'Error received from platform' + result.message);\n        });\n      });\n    }\n  }\n  showAlert (title: string, msg: string) {\n\n    let alert = this.alertCtrl.create ({\n      title: title,\n      message: msg,\n      cssClass: 'code-alert',\n      buttons: [\n        {\n            text: this.translator.getInnerHTML('POPUP_OK') || 'OK',\n            handler: data => {\n\n              this.nav.pop();\n\n            }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n}"]}